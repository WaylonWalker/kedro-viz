{"version":3,"sources":["components/easter-egg/brodyquest.mp3","components/easter-egg/easter-egg.png","actions/index.js","reducers/index.js","config.js","utils/index.js","selectors/tags.js","selectors/linked-nodes.js","selectors/nodes.js","selectors/edges.js","selectors/layout.js","components/flowchart/icon.js","components/flowchart/index.js","components/tag-list/index.js","components/node-list/index.js","components/chart-ui/index.js","components/sidebar/menu-icon.svg","components/sidebar/index.js","components/icon-toolbar/theme-icon.svg","components/icon-toolbar/label-icon.svg","components/icon-toolbar/index.js","components/wrapper/index.js","utils/format-data.js","utils/random-data.js","utils/data/lorem-ipsum.mock.js","utils/data/animals.mock.js","utils/data/demo.mock.js","components/app/load-data.js","components/app/index.js","store/index.js","components/easter-egg/index.js","index.js"],"names":["module","exports","CHANGE_VIEW","RESET_DATA","TOGGLE_NODE_CLICKED","TOGGLE_NODE_DISABLED","TOGGLE_NODES_DISABLED","TOGGLE_NODE_HOVERED","toggleNodeHovered","nodeHovered","type","TOGGLE_PARAMETERS","TOGGLE_TEXT_LABELS","TOGGLE_TAG_ACTIVE","TOGGLE_TAG_FILTER","TOGGLE_THEME","UPDATE_CHART_SIZE","reducer","state","action","Object","assign","view","data","nodeClicked","nodeDisabled","nodeID","isDisabled","nodeIDs","reduce","disabled","id","paramIDs","nodes","filter","nodeIsParam","parameters","textLabels","tagActive","tagID","active","tagEnabled","enabled","theme","chartSize","getDataSource","source","qs","window","location","search","match","REACT_APP_DATA_SOURCE","process","encodeURIComponent","host","validateDataSource","expectedInput","includes","Error","join","config","dataPath","dataSource","localStorageName","arrayToObject","array","callback","newObject","forEach","key","getNumberArray","n","Array","from","keys","randomIndex","Math","floor","random","randomNumber","ceil","getRandom","range","length","LOREM_IPSUM","split","getRandomName","map","unique","d","i","arr","indexOf","saveState","serializedState","JSON","stringify","localStorage","setItem","err","console","error","getTags","tags","getTagEnabled","getTagData","createSelector","tagName","sort","name","Boolean","getTagCount","total","getCentralNode","clickedNode","hoveredNode","getLinkedNodes","edges","edgeSources","edgeTargets","linkedNodes","traverseGraph","prev","next","walk","edge","direction","apply","reverse","getNodes","getNodeName","nodeName","getNodeDisabledNode","getNodeTags","nodeTags","getNodeType","nodeType","getNodeDisabledTag","tagCount","some","tag","getNodeDisabledView","getNodeDisabled","nodeDisabledNode","nodeDisabledTag","nodeDisabledView","getNodeActive","centralNode","activeViaTag","getNodeData","nodeActive","a","b","disabled_node","disabled_tag","disabled_view","getVisibleNodes","getEdges","getEdgeSources","getEdgeTargets","getEdgeDisabledNode","edgeID","target","getEdgeDisabled","edgeDisabledNode","getTransitiveEdges","transitiveEdges","edgeIDs","sources","targets","edgeGraphWalker","path","concat","push","addNewEdge","findTransitiveEdges","getVisibleEdges","edgeDisabled","getNodeWidth","padding","svg","text","append","node","width","getBBox","remove","getGraph","graph","dagre","graphlib","Graph","setGraph","marginx","marginy","hasTextLabels","select","attr","prepareTextContainer","setNode","boxSize","height","getNodeSize","label","setEdge","layout","getLayout","order","x","y","getZoomPosition","container","chart","every","isNaN","Number","isFinite","scale","min","translateX","translateY","viewBox","task","paths","document","createElementNS","iconSize","g","FlowChart","props","handleWindowResize","updateChartSize","handleNodeClick","onToggleNodeClicked","event","stopPropagation","handleChartClick","handleNodeMouseOver","onToggleNodeHovered","showTooltip","handleNodeMouseOut","hideTooltip","handleNodeKeyDown","keyCode","tooltipVisible","tooltipIsRight","tooltipText","tooltipX","tooltipY","containerRef","React","createRef","svgRef","wrapperRef","edgesRef","nodesRef","this","el","current","wrapper","edgeGroup","nodeGroup","initZoomBehaviour","drawChart","zoomChart","addEventListener","removeEventListener","prevProps","visibleNav","zoom","getBoundingClientRect","left","top","navOffset","getNavOffset","onUpdateChartSize","outerWidth","outerHeight","zoomBehaviour","on","transform","call","transition","duration","zoomIdentity","translate","selectAll","lineShape","line","curve","curveBasis","enterEdges","enter","exit","merge","classed","attrTween","points","previous","interpolatePath","enterNodes","icon","end","catch","finally","eventOffset","isRight","xOffset","setState","className","ref","onClick","refX","refY","markerUnits","markerWidth","markerHeight","orient","classnames","style","Component","connect","dispatch","toggleNodeClicked","onToggleTagActive","toggleTagActive","onToggleTagFilter","toggleTagFilter","defaultText","Fragment","title","onMouseEnter","onMouseLeave","checked","onChange","e","escapeRegExp","utils","getHighlightedText","handleKeyEvent","NodeList","searchValue","handleKeyDown","bind","updateSearchValue","results","result","highlightedLabel","valueRegex","RegExp","nodeMatchesSearch","escape","onToggleAllNodes","onToggleNodeDisabled","formattedNodes","highlightMatch","filterResults","onKeyDown","value","autoHide","hideTracksWhenNotNeeded","dangerouslySetInnerHTML","__html","toggleNodeDisabled","hasData","onChangeView","onToggleParameters","_extends","arguments","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref4","_ref","ForwardRef","forwardRef","ShowMenuButton","onToggle","aria-label","HideMenuButton","visible","Sidebar","ThemeButton","aria-live","LabelButton","onToggleTextLabels","onToggleTheme","Wrapper","toggleNav","formatData","nodeFullName","edgeActive","isArray","validateInput","schema_id","full_name","addNode","getEdgeID","addEdge","addTag","MAX_CONNECTED_NODES","MAX_LAYER_COUNT","MAX_TAG_COUNT","Pipeline","CONNECTION_COUNT","LAYER_COUNT","TAG_COUNT","generateTags","paramFreq","count","getLayer","getRandomNodeName","replace","layer","generateNodeList","condition","getRandomTags","getConnectedNodes","findIndex","message","created_ts","Date","getTime","getSchema","generateRandomPipeline","getDatum","getInitialState","pipelineData","getItem","parse","loadState","loadData","onLoadData","getRandomPipeline","loremIpsum","animals","demo","loadJsonData","then","json","App","resetStoreData","initialState","store","createStore","subscribe","getState","formattedData","defaultProps","EasterEgg","play","info","audio","Audio","mp3","loop","_handleKeyDown","KonamiCode","listen","_toggleState","_toggleAudio","_toggleCSS","body","classList","pause","add","src","img","alt","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.94d5c4c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brodyquest.6259cc84.mp3\";","module.exports = __webpack_public_path__ + \"static/media/easter-egg.e702bd5f.png\";","export const CHANGE_VIEW = 'CHANGE_VIEW';\n\n/**\n * Change the view mode, which handles how the nodes should be filtered.\n * @param {string} view One of 'combined', 'data', or 'task'\n */\nexport function changeView(view) {\n  return {\n    type: CHANGE_VIEW,\n    view\n  };\n}\n\nexport const RESET_DATA = 'RESET_DATA';\n\n/**\n * Overwrite the existing data store when receiving new data from upstream\n * @param {Object} data New pipeline state data\n */\nexport function resetData(data) {\n  return {\n    type: RESET_DATA,\n    data\n  };\n}\n\nexport const TOGGLE_NODE_CLICKED = 'TOGGLE_NODE_CLICKED';\n\n/**\n * Update the value of the currently-active clicked node\n * @param {string|null} nodeClicked The node's unique identifier\n */\nexport function toggleNodeClicked(nodeClicked) {\n  return {\n    type: TOGGLE_NODE_CLICKED,\n    nodeClicked\n  };\n}\n\nexport const TOGGLE_NODE_DISABLED = 'TOGGLE_NODE_DISABLED';\n\n/**\n * Toggle a node's visibility on/off\n * @param {string} nodeID The node's unique identifier\n * @param {Boolean} isDisabled Whether the node should be visible\n */\nexport function toggleNodeDisabled(nodeID, isDisabled) {\n  return {\n    type: TOGGLE_NODE_DISABLED,\n    nodeID,\n    isDisabled\n  };\n}\n\nexport const TOGGLE_NODES_DISABLED = 'TOGGLE_NODES_DISABLED';\n\n/**\n * Toggle a selected group of nodes' visibility on/off\n * @param {Array} nodeIDs The nodes' unique identifiers\n * @param {Boolean} isDisabled Whether the node should be visible\n */\nexport function toggleNodesDisabled(nodeIDs, isDisabled) {\n  return {\n    type: TOGGLE_NODES_DISABLED,\n    nodeIDs,\n    isDisabled\n  };\n}\n\nexport const TOGGLE_NODE_HOVERED = 'TOGGLE_NODE_HOVERED';\n\n/**\n * Update the value of the currently-active hovered node\n * @param {string|null} nodeHovered The node's unique identifier\n */\nexport function toggleNodeHovered(nodeHovered) {\n  return {\n    type: TOGGLE_NODE_HOVERED,\n    nodeHovered\n  };\n}\n\nexport const TOGGLE_PARAMETERS = 'TOGGLE_PARAMETERS';\n\n/**\n * Toggle whether to show Parameters on/off\n * @param {Boolean} parameters Whether to show Parameters\n */\nexport function toggleParameters(parameters) {\n  return {\n    type: TOGGLE_PARAMETERS,\n    parameters\n  };\n}\n\nexport const TOGGLE_TEXT_LABELS = 'TOGGLE_TEXT_LABELS';\n\n/**\n * Toggle whether to show text labels on/off\n * @param {Boolean} textLabels True if text labels are to be shown\n */\nexport function toggleTextLabels(textLabels) {\n  return {\n    type: TOGGLE_TEXT_LABELS,\n    textLabels\n  };\n}\n\nexport const TOGGLE_TAG_ACTIVE = 'TOGGLE_TAG_ACTIVE';\n\n/**\n * Toggle a tag's highlighting on/off\n * @param {string} tagID Tag id\n * @param {Boolean} active True if tag is active\n */\nexport function toggleTagActive(tagID, active) {\n  return {\n    type: TOGGLE_TAG_ACTIVE,\n    tagID,\n    active\n  };\n}\n\nexport const TOGGLE_TAG_FILTER = 'TOGGLE_TAG_FILTER';\n\n/**\n * Toggle a tag on/off\n * @param {string} tagID Tag id\n * @param {Boolean} enabled True if tag is enabled\n */\nexport function toggleTagFilter(tagID, enabled) {\n  return {\n    type: TOGGLE_TAG_FILTER,\n    tagID,\n    enabled\n  };\n}\n\nexport const TOGGLE_THEME = 'TOGGLE_THEME';\n\n/**\n * Switch between light/dark theme\n * @param {string} theme Theme name\n */\nexport function toggleTheme(theme) {\n  return {\n    type: TOGGLE_THEME,\n    theme\n  };\n}\n\nexport const UPDATE_CHART_SIZE = 'UPDATE_CHART_SIZE';\n\n/**\n * Store the chart size, based on the window\n * @param {Object} chartSize getBoundingClientRect value\n */\nexport function updateChartSize(chartSize) {\n  return {\n    type: UPDATE_CHART_SIZE,\n    chartSize\n  };\n}\n","import {\n  CHANGE_VIEW,\n  RESET_DATA,\n  TOGGLE_NODE_CLICKED,\n  TOGGLE_NODE_DISABLED,\n  TOGGLE_NODES_DISABLED,\n  TOGGLE_NODE_HOVERED,\n  TOGGLE_PARAMETERS,\n  TOGGLE_TAG_ACTIVE,\n  TOGGLE_TAG_FILTER,\n  TOGGLE_TEXT_LABELS,\n  TOGGLE_THEME,\n  UPDATE_CHART_SIZE\n} from '../actions';\n\nfunction reducer(state = {}, action) {\n  switch (action.type) {\n    case CHANGE_VIEW:\n      return Object.assign({}, state, {\n        view: action.view\n      });\n\n    case RESET_DATA:\n      return Object.assign({}, state, action.data);\n\n    case TOGGLE_NODE_CLICKED: {\n      return Object.assign({}, state, {\n        nodeClicked: action.nodeClicked\n      });\n    }\n\n    case TOGGLE_NODE_DISABLED: {\n      return Object.assign({}, state, {\n        nodeDisabled: Object.assign({}, state.nodeDisabled, {\n          [action.nodeID]: action.isDisabled\n        })\n      });\n    }\n\n    case TOGGLE_NODES_DISABLED: {\n      return Object.assign({}, state, {\n        nodeDisabled: action.nodeIDs.reduce(\n          (disabled, id) =>\n            Object.assign({}, disabled, {\n              [id]: action.isDisabled\n            }),\n          state.nodeDisabled\n        )\n      });\n    }\n\n    case TOGGLE_NODE_HOVERED: {\n      return Object.assign({}, state, {\n        nodeHovered: action.nodeHovered\n      });\n    }\n\n    case TOGGLE_PARAMETERS: {\n      const paramIDs = state.nodes.filter(id => state.nodeIsParam[id]);\n      return Object.assign({}, state, {\n        nodeDisabled: paramIDs.reduce(\n          (disabled, id) =>\n            Object.assign({}, disabled, {\n              [id]: !action.parameters\n            }),\n          state.nodeDisabled\n        ),\n        parameters: action.parameters\n      });\n    }\n\n    case TOGGLE_TEXT_LABELS:\n      return Object.assign({}, state, {\n        textLabels: action.textLabels\n      });\n\n    case TOGGLE_TAG_ACTIVE: {\n      return Object.assign({}, state, {\n        tagActive: Object.assign({}, state.tagActive, {\n          [action.tagID]: action.active\n        })\n      });\n    }\n\n    case TOGGLE_TAG_FILTER: {\n      return Object.assign({}, state, {\n        tagEnabled: Object.assign({}, state.tagEnabled, {\n          [action.tagID]: action.enabled\n        })\n      });\n    }\n\n    case TOGGLE_THEME: {\n      return Object.assign({}, state, {\n        theme: action.theme\n      });\n    }\n\n    case UPDATE_CHART_SIZE: {\n      return Object.assign({}, state, {\n        chartSize: action.chartSize\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","/**\n * Determine which data source to use\n * @return {string} Data source type key\n */\nconst getDataSource = () => {\n  let source;\n  const qs = window.location.search.match(/data=(\\w+)/);\n  const { REACT_APP_DATA_SOURCE } = process.env;\n  if (qs) {\n    source = encodeURIComponent(qs[1]);\n  } else if (REACT_APP_DATA_SOURCE) {\n    source = REACT_APP_DATA_SOURCE;\n  } else if (window.location.host === 'quantumblacklabs.github.io') {\n    source = 'demo';\n  }\n  return validateDataSource(source);\n};\n\n/**\n * Validate against expected results\n * @param {string} source Input type key\n * @return {string} Data source type key\n */\nconst validateDataSource = source => {\n  const expectedInput = ['lorem', 'animals', 'demo', 'json', 'random'];\n  if (expectedInput.includes(source)) {\n    return source;\n  }\n  if (source) {\n    throw new Error(\n      `Unexpected data source value '${source}'. Your input should be one of the following values: ${expectedInput.join(\n        ', '\n      )}.`\n    );\n  }\n  return 'json';\n};\n\n/**\n * Generate a configuration object for use across the application\n */\nconst config = () => ({\n  dataPath: './api/nodes.json',\n  dataSource: getDataSource(),\n  localStorageName: 'KedroViz'\n});\n\nexport default config;\n","import config from '../config';\n\n//--- Useful JS utility functions ---//\n\n/**\n * Loop through an array and output to an object\n * @param {Array} array\n * @param {Function} callback\n */\nexport const arrayToObject = (array, callback) => {\n  const newObject = {};\n  array.forEach(key => {\n    newObject[key] = callback(key);\n  });\n  return newObject;\n};\n\n/**\n * Format a UNIX timestamp into a human-readable string\n * @param {number|string} datetime A UNIX timestamp\n * @returns {string} The date and time but prettier\n */\nexport const formatTime = datetime => {\n  const d = new Date(+datetime);\n  return `${d.toDateString()} ${d.toLocaleTimeString()}`;\n};\n\n/**\n * Get an array of numbers\n * @param {number} n Length of the array\n */\nexport const getNumberArray = n => Array.from(Array(n).keys());\n\n/**\n * Get a random number between 0 to n-1, inclusive\n * @param {number} n Max number\n */\nexport const randomIndex = n => Math.floor(Math.random() * n);\n\n/**\n * Get a random number between 1 to n, inclusive\n * @param {number} n Max number\n */\nexport const randomNumber = n => Math.ceil(Math.random() * n);\n\n/**\n * Get a random datum from an array\n * @param {Array} range The array to select a random item from\n */\nexport const getRandom = range => range[randomIndex(range.length)];\n\nconst LOREM_IPSUM = 'lorem ipsum dolor sit amet consectetur adipiscing elit vestibulum id turpis nunc nulla vitae diam dignissim fermentum elit sit amet viverra libero quisque condimentum pellentesque convallis sed consequat neque ac rhoncus finibus'.split(\n  ' '\n);\n\n/**\n * Generate a random latin name\n * @param {number} n Number of words in the name\n * @param {string} join The character(s) used to join each word\n */\nexport const getRandomName = (n, join = '_') =>\n  getNumberArray(n)\n    .map(() => getRandom(LOREM_IPSUM))\n    .join(join);\n\n/**\n * Filter duplicate values from an array\n * @param {any} d Datum\n * @param {number} i Index\n * @param {Array} arr The array to remove duplicate values from\n */\nexport const unique = (d, i, arr) => arr.indexOf(d) === i;\n\n/**\n * Retrieve state data from localStorage\n * @return {Object} State\n */\nexport const loadState = () => {\n  const { localStorageName } = config();\n  try {\n    const serializedState = window.localStorage.getItem(localStorageName);\n    if (serializedState === null) {\n      return {};\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\n/**\n * Save updated state to localStorage\n * @param {Object} state New state object\n */\nexport const saveState = state => {\n  const { localStorageName } = config();\n  try {\n    const serializedState = JSON.stringify(state);\n    window.localStorage.setItem(localStorageName, serializedState);\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import { createSelector } from 'reselect';\n\nconst getTags = state => state.tags;\nconst getTagName = state => state.tagName;\nconst getTagActive = state => state.tagActive;\nconst getTagEnabled = state => state.tagEnabled;\n\n/**\n * Retrieve the formatted list of tag filters\n * @param {Object} tags Active pipeline tag data\n * @return {Array} Tag data list\n */\nexport const getTagData = createSelector(\n  [getTags, getTagName, getTagActive, getTagEnabled],\n  (tags, tagName, tagActive, tagEnabled) =>\n    tags.sort().map(id => ({\n      id,\n      name: tagName[id],\n      active: Boolean(tagActive[id]),\n      enabled: Boolean(tagEnabled[id])\n    }))\n);\n\n/**\n * Get the total and enabled number of tags\n * @param {Array} tags List of tag objects\n * @return {Object} total / enabled tags\n */\nexport const getTagCount = createSelector(\n  [getTags, getTagEnabled],\n  (tags, tagEnabled) => ({\n    total: tags.length,\n    enabled: tags.filter(id => tagEnabled[id]).length\n  })\n);\n","import { createSelector } from 'reselect';\n\nconst getEdges = state => state.edges;\nconst getEdgeSources = state => state.edgeSources;\nconst getEdgeTargets = state => state.edgeTargets;\nconst getClickedNode = state => state.nodeClicked;\nconst getHoveredNode = state => state.nodeHovered;\n\n/**\n * Get the node that should be used as the center of the set of linked nodes\n * @param {Array} edges\n * @param {string} nodeID\n */\nexport const getCentralNode = createSelector(\n  [getClickedNode, getHoveredNode],\n  (clickedNode, hoveredNode) => clickedNode || hoveredNode\n);\n\n/**\n * Recursively search through the edges data for ancestor and descendant nodes\n * @param {Array} edges\n * @param {string} nodeID\n */\nexport const getLinkedNodes = createSelector(\n  [getEdges, getEdgeSources, getEdgeTargets, getCentralNode],\n  (edges, edgeSources, edgeTargets, nodeID) => {\n    if (!nodeID) {\n      return {};\n    }\n\n    const linkedNodes = {\n      [nodeID]: true\n    };\n\n    const traverseGraph = (prev, next) => {\n      (function walk(id) {\n        edges.forEach(edge => {\n          if (prev[edge] === id) {\n            linkedNodes[next[edge]] = true;\n            walk(next[edge]);\n          }\n        });\n      })(nodeID);\n    };\n\n    const direction = [edgeSources, edgeTargets];\n    traverseGraph.apply(null, direction);\n    traverseGraph.apply(null, direction.reverse());\n\n    return linkedNodes;\n  }\n);\n","import { createSelector } from 'reselect';\nimport { arrayToObject } from '../utils';\nimport { getTagCount } from './tags';\nimport { getCentralNode } from './linked-nodes';\n\nconst getNodes = state => state.nodes;\nconst getView = state => state.view;\nconst getNodeName = state => state.nodeName;\nconst getNodeDisabledNode = state => state.nodeDisabled;\nconst getNodeTags = state => state.nodeTags;\nconst getNodeType = state => state.nodeType;\nconst getTagActive = state => state.tagActive;\nconst getTagEnabled = state => state.tagEnabled;\n\n/**\n * Calculate whether nodes should be disabled based on their tags\n */\nexport const getNodeDisabledTag = createSelector(\n  [getNodes, getTagEnabled, getTagCount, getNodeTags],\n  (nodes, tagEnabled, tagCount, nodeTags) =>\n    arrayToObject(nodes, nodeID => {\n      if (tagCount.enabled === 0) {\n        return false;\n      }\n      if (nodeTags[nodeID].length) {\n        // Hide task nodes that don't have at least one tag filter enabled\n        return !nodeTags[nodeID].some(tag => tagEnabled[tag]);\n      }\n      return true;\n    })\n);\n\n/**\n * Calculate whether nodes should be disabled based on the view\n */\nexport const getNodeDisabledView = createSelector(\n  [getNodes, getNodeType, getView],\n  (nodes, nodeType, view) =>\n    arrayToObject(\n      nodes,\n      nodeID => view !== 'combined' && view !== nodeType[nodeID]\n    )\n);\n\n/**\n * Set disabled status if the node is specifically hidden, and/or via a tag/view\n */\nexport const getNodeDisabled = createSelector(\n  [getNodes, getNodeDisabledNode, getNodeDisabledTag, getNodeDisabledView],\n  (nodes, nodeDisabledNode, nodeDisabledTag, nodeDisabledView) =>\n    arrayToObject(nodes, id =>\n      Boolean(\n        nodeDisabledNode[id] || nodeDisabledTag[id] || nodeDisabledView[id]\n      )\n    )\n);\n\n/**\n * Set active status if the node is specifically highlighted, and/or via an associated tag\n * @return {Boolean} True if active\n */\nexport const getNodeActive = createSelector(\n  [getNodes, getCentralNode, getNodeTags, getTagActive],\n  (nodes, centralNode, nodeTags, tagActive) =>\n    arrayToObject(nodes, nodeID => {\n      if (nodeID === centralNode) {\n        return true;\n      }\n      const activeViaTag = nodeTags[nodeID].some(tag => tagActive[tag]);\n      return Boolean(activeViaTag);\n    })\n);\n\n/**\n * Returns formatted nodes as an array, with all relevant properties\n */\nexport const getNodeData = createSelector(\n  [\n    getNodes,\n    getNodeName,\n    getNodeType,\n    getNodeActive,\n    getNodeDisabled,\n    getNodeDisabledNode,\n    getNodeDisabledTag,\n    getNodeDisabledView\n  ],\n  (\n    nodes,\n    nodeName,\n    nodeType,\n    nodeActive,\n    nodeDisabled,\n    nodeDisabledNode,\n    nodeDisabledTag,\n    nodeDisabledView\n  ) =>\n    nodes\n      .sort((a, b) => {\n        if (nodeName[a] < nodeName[b]) return -1;\n        if (nodeName[a] > nodeName[b]) return 1;\n        return 0;\n      })\n      .map(id => ({\n        id,\n        name: nodeName[id],\n        type: nodeType[id],\n        active: nodeActive[id],\n        disabled: nodeDisabled[id],\n        disabled_node: Boolean(nodeDisabledNode[id]),\n        disabled_tag: nodeDisabledTag[id],\n        disabled_view: nodeDisabledView[id]\n      }))\n);\n\n/**\n * Returns only visible nodes as an array, but without any extra properties\n * that are unnecessary for the chart layout calculation\n */\nexport const getVisibleNodes = createSelector(\n  [getNodes, getNodeName, getNodeType, getNodeDisabled],\n  (nodes, nodeName, nodeType, nodeDisabled) =>\n    nodes\n      .filter(id => !nodeDisabled[id])\n      .map(id => ({\n        id,\n        name: nodeName[id],\n        type: nodeType[id],\n        disabled: nodeDisabled[id]\n      }))\n);\n","import { createSelector } from 'reselect';\nimport { arrayToObject } from '../utils';\nimport { getNodeDisabled } from './nodes';\n\nconst getNodes = state => state.nodes;\nconst getEdges = state => state.edges;\nconst getEdgeSources = state => state.edgeSources;\nconst getEdgeTargets = state => state.edgeTargets;\n\n/**\n * Calculate whether edges should be disabled based on their source/target nodes\n */\nexport const getEdgeDisabledNode = createSelector(\n  [getEdges, getNodeDisabled, getEdgeSources, getEdgeTargets],\n  (edges, nodeDisabled, edgeSources, edgeTargets) =>\n    arrayToObject(edges, edgeID => {\n      const source = edgeSources[edgeID];\n      const target = edgeTargets[edgeID];\n      return nodeDisabled[source] || nodeDisabled[target];\n    })\n);\n\n/**\n * Determine whether an edge should be disabled\n */\nexport const getEdgeDisabled = createSelector(\n  [getEdges, getEdgeDisabledNode],\n  (edges, edgeDisabledNode) =>\n    arrayToObject(edges, edgeID => Boolean(edgeDisabledNode[edgeID]))\n);\n\n/**\n * Create a new transitive edge from the first and last edge in the path\n * @param {string} target Node ID for the new edge\n * @param {string} source Node ID for the new edge\n * @param {object} transitiveEdges Store of existing edges\n */\nexport const addNewEdge = (source, target, { edgeIDs, sources, targets }) => {\n  const id = [source, target].join('|');\n  if (!edgeIDs.includes(id)) {\n    edgeIDs.push(id);\n    sources[id] = source;\n    targets[id] = target;\n  }\n};\n\n/**\n * Recursively walk through the graph, stepping over disabled nodes,\n * generating a list of nodes visited so far, and create transitive edges\n * for each path that visits disabled nodes between enabled nodes.\n * @param {Array} path The route that has been explored so far\n */\nexport const findTransitiveEdges = (\n  edges,\n  transitiveEdges,\n  { edgeSources, edgeTargets, nodeDisabled }\n) => {\n  /**\n   * Recursively walk through the graph, stepping over disabled nodes,\n   * generating a list of nodes visited so far, and create transitive edges\n   * for each path that visits disabled nodes between enabled nodes.\n   * @param {Array} path The route that has been explored so far\n   */\n  const edgeGraphWalker = path => {\n    edges.forEach(edgeID => {\n      const source = path[path.length - 1];\n      // Filter to only edges where the source node is the previous target\n      if (edgeSources[edgeID] !== source) {\n        return;\n      }\n      const target = edgeTargets[edgeID];\n      if (nodeDisabled[target]) {\n        // If target node is disabled then keep walking the graph\n        edgeGraphWalker(path.concat(target));\n      } else if (path.length > 1) {\n        // Else only create a new edge if there would be 3 or more nodes in the path\n        addNewEdge(path[0], target, transitiveEdges);\n      }\n    });\n  };\n\n  return edgeGraphWalker;\n};\n\n/**\n * Create new edges to connect nodes which have a disabled node (or nodes)\n * in between them\n */\nexport const getTransitiveEdges = createSelector(\n  [getNodes, getEdges, getNodeDisabled, getEdgeSources, getEdgeTargets],\n  (nodes, edges, nodeDisabled, edgeSources, edgeTargets) => {\n    const transitiveEdges = {\n      edgeIDs: [],\n      sources: {},\n      targets: {}\n    };\n    // Examine the children of every enabled node. The walk only needs\n    // to be run in a single direction (i.e. top down), because links\n    // that end in a terminus can never be transitive.\n    nodes.forEach(nodeID => {\n      if (!nodeDisabled[nodeID]) {\n        findTransitiveEdges(edges, transitiveEdges, {\n          edgeSources,\n          edgeTargets,\n          nodeDisabled\n        })([nodeID]);\n      }\n    });\n    return transitiveEdges;\n  }\n);\n\n/**\n * Get only the visible edges (plus transitive edges),\n * and return them formatted as an array of objects\n */\nexport const getVisibleEdges = createSelector(\n  [\n    getEdges,\n    getEdgeDisabled,\n    getEdgeSources,\n    getEdgeTargets,\n    getTransitiveEdges\n  ],\n  (edges, edgeDisabled, edgeSources, edgeTargets, transitiveEdges) =>\n    edges\n      .filter(id => !edgeDisabled[id])\n      .concat(transitiveEdges.edgeIDs)\n      .map(id => ({\n        id,\n        source: edgeSources[id] || transitiveEdges.sources[id],\n        target: edgeTargets[id] || transitiveEdges.targets[id]\n      }))\n);\n","import { createSelector } from 'reselect';\nimport { select } from 'd3-selection';\nimport dagre from 'dagre';\nimport { getNodeActive, getVisibleNodes } from './nodes';\nimport { getVisibleEdges } from './edges';\n\nconst getTextLabels = state => state.textLabels;\nconst getNodeType = state => state.nodeType;\nconst getChartSize = state => state.chartSize;\n\n/**\n * Add DOM container for checking text widths\n * @param {Boolean} hasTextLabels Whether text labels are\n * @return {object|undefined} D3 element, or nothing\n */\nexport const prepareTextContainer = hasTextLabels => {\n  if (!hasTextLabels) {\n    return;\n  }\n  return select('body')\n    .append('svg')\n    .attr('class', 'kedro node');\n};\n\n/**\n * Temporarily append text element to the DOM, to measure its width\n * @param {string} name Node name\n * @param {number} padding Additional width\n * @param {Object} svg D3 container\n * @return {number} Node width\n */\nexport const getNodeWidth = (name, padding, svg) => {\n  if (!svg) {\n    return padding;\n  }\n  const text = svg.append('text').text(name);\n  const node = text.node();\n  const width = node ? node.getBBox().width : 0;\n  text.remove();\n  return width + padding;\n};\n\n/**\n * Calculate the width and height of a node container\n * @param {Object} node Datum object\n * @param {Object} svg D3 element wrapper\n * @return {Object} width and height\n */\nexport const getNodeSize = (node, svg) => {\n  let boxSize = 40;\n  if (!svg && node.type === 'task') {\n    boxSize = 50;\n  }\n  return {\n    height: boxSize,\n    width: getNodeWidth(node.name, boxSize, svg)\n  };\n};\n\n/**\n * Calculate chart layout with Dagre.js.\n * This is an extremely expensive operation so we want it to run as infrequently\n * as possible, and keep it separate from other properties (like node.active)\n * which don't affect layout.\n */\nexport const getGraph = createSelector(\n  [getVisibleNodes, getVisibleEdges, getTextLabels],\n  (nodes, edges, textLabels) => {\n    const graph = new dagre.graphlib.Graph().setGraph({\n      marginx: 40,\n      marginy: 40\n    });\n\n    const svg = prepareTextContainer(textLabels);\n\n    nodes.forEach(node => {\n      graph.setNode(node.id, {\n        ...node,\n        ...getNodeSize(node, svg),\n        label: node.name\n      });\n    });\n\n    edges.forEach(edge => {\n      graph.setEdge(edge.source, edge.target, edge);\n    });\n\n    // Run Dagre layout to calculate X/Y positioning\n    dagre.layout(graph);\n\n    // Tidy up leftover DOM container\n    if (svg) {\n      svg.remove();\n    }\n\n    return graph;\n  }\n);\n\n/**\n * Reformat data for use on the chart,\n * and recombine with other data that doesn't affect layout\n */\nexport const getLayout = createSelector(\n  [getGraph, getNodeType, getNodeActive],\n  (graph, nodeType, nodeActive) => ({\n    nodes: graph.nodes().map(nodeID => {\n      const node = graph.node(nodeID);\n      return Object.assign({}, node, {\n        type: nodeType[nodeID],\n        order: node.x + node.y * 9999,\n        active: nodeActive[nodeID]\n      });\n    }),\n    edges: graph.edges().map(edge => graph.edge(edge))\n  })\n);\n\n/**\n * Get chart zoom translation/scale,\n * by comparing native graph width/height to container width/height\n */\nexport const getZoomPosition = createSelector(\n  [getGraph, getChartSize],\n  (graph, container) => {\n    const chart = graph.graph();\n    const validDimensions = [\n      container.width,\n      container.height,\n      chart.width,\n      chart.height\n    ].every(n => !isNaN(n) && Number.isFinite(n));\n\n    if (validDimensions) {\n      const scale = Math.min(\n        container.width / chart.width,\n        container.height / chart.height\n      );\n      return {\n        scale,\n        translateX: container.width / 2 - (chart.width * scale) / 2,\n        translateY: container.height / 2 - (chart.height * scale) / 2\n      };\n    }\n    return {\n      scale: 1,\n      translateX: 0,\n      translateY: 0\n    };\n  }\n);\n","import { select } from 'd3-selection';\n\nconst viewBox = {\n  data: '0 0 58.2 58.2',\n  task: '0 0 268.76 268.76',\n  parameters: '0 0 24 24'\n};\n\nconst paths = {\n  // database icon\n  data: [\n    'M31.7 33.07a84.08 84.08 0 0 1-5.21 0c-7.34-.2-13.2-1.24-17.4-2.72A20.44 20.44 0 0 1 4.1 28V37.4c2.85 2.97 12.4 5.71 25 5.71s22.15-2.74 25-5.71V28c-1.32.9-3.03 1.7-5.03 2.37-4.2 1.47-10.04 2.5-17.36 2.7z',\n    'M4.1 14.89V24.29c2.64 2.75 11.03 5.3 22.29 5.67h.35l.98.03a79.02 79.02 0 0 0 2.76 0l.99-.02.34-.01c11.26-.36 19.65-2.92 22.29-5.67v-9.4C49.23 18.23 38.94 20 29.1 20s-20.13-1.77-25-5.11z',\n    'M53.97 8.54C52.84 4.24 44.22 0 29.1 0 14.02 0 5.4 4.22 4.25 8.51A.97.97 0 0 0 4.1 9v2.3c2.84 2.97 12.32 5.7 25 5.7s22.16-2.73 25-5.7V9a.92.92 0 0 0-.13-.46zM4.1 41v8.2c0 .16.04.32.12.45 1.18 4.9 11.74 8.55 24.88 8.55 13.1 0 23.65-3.64 24.87-8.52a1 1 0 0 0 .13-.48V41c-4.14 2.91-12.66 5.2-25 5.2-12.35 0-20.87-2.29-25-5.2z'\n  ],\n  // cog icon\n  task: [\n    'M267.92 119.46c-.42-3.78-4.83-6.62-8.64-6.62-12.31 0-23.24-7.23-27.82-18.41a29.93 29.93 0 0 1 7.51-33.23 7.46 7.46 0 0 0 .82-10.13c-6.3-8-13.47-15.24-21.3-21.5a7.48 7.48 0 0 0-10.2.82c-8.01 8.87-22.4 12.17-33.52 7.53a29.85 29.85 0 0 1-18.15-29.18 7.46 7.46 0 0 0-6.6-7.85A134.16 134.16 0 0 0 119.8.81a7.48 7.48 0 0 0-6.65 7.7 29.9 29.9 0 0 1-18.4 28.67c-10.99 4.48-25.28 1.21-33.27-7.58a7.5 7.5 0 0 0-10.14-.85 133.48 133.48 0 0 0-21.74 21.5 7.48 7.48 0 0 0 .8 10.2A29.78 29.78 0 0 1 37.9 94c-4.63 11.04-16.1 18.16-29.24 18.16a7.3 7.3 0 0 0-7.76 6.6 134.62 134.62 0 0 0-.06 30.56c.43 3.8 4.97 6.6 8.82 6.6 11.7-.3 22.93 6.95 27.65 18.42a29.88 29.88 0 0 1-7.52 33.23 7.47 7.47 0 0 0-.81 10.13 133.46 133.46 0 0 0 21.25 21.5 7.47 7.47 0 0 0 10.23-.8c8.04-8.9 22.43-12.19 33.5-7.54a29.8 29.8 0 0 1 18.18 29.17 7.46 7.46 0 0 0 6.6 7.85 133.57 133.57 0 0 0 30.23.08 7.48 7.48 0 0 0 6.66-7.7A29.87 29.87 0 0 1 174 231.6c11.06-4.51 25.29-1.2 33.28 7.58a7.5 7.5 0 0 0 10.14.84 133.79 133.79 0 0 0 21.74-21.49 7.46 7.46 0 0 0-.8-10.21 29.78 29.78 0 0 1-7.53-33.53 30.09 30.09 0 0 1 27.5-18.21l1.66.04a7.48 7.48 0 0 0 7.86-6.59 134.5 134.5 0 0 0 .06-30.56zM134.59 179.5a44.87 44.87 0 0 1-44.82-44.82 44.87 44.87 0 0 1 44.83-44.83 44.87 44.87 0 0 1 44.82 44.83 44.87 44.87 0 0 1-44.82 44.82z'\n  ],\n  // sliders icon\n  parameters: [\n    'M11.2 18a3 3 0 0 0 0 2H3v-2h8.2zm9.8 0v2h-4.2a3 3 0 0 0 0-2H21zM5.2 11a3 3 0 0 0 0 2H3v-2h2.2zM21 11v2H10.8a3 3 0 0 0 0-2H21zm-9-6c0 .4 0 .7.2 1H3V4h9.2a3 3 0 0 0-.2 1zm9-1v2h-3.2a3 3 0 0 0 0-2H21zM14 17a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm-6-7a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm7-7a2 2 0 1 1 0 4 2 2 0 0 1 0-4z'\n  ]\n};\n\n/**\n * Generate cog/database icon.\n * Inline SVG is required to support image exports\n */\nexport default node => {\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n  const iconSizes = {\n    data: 17,\n    task: 18,\n    parameters: 22\n  };\n  const iconSize = iconSizes[node.type];\n\n  const g = select(svg)\n    .attr('class', 'node__icon')\n    .attr('viewBox', viewBox[node.type])\n    .attr('width', iconSize)\n    .attr('height', iconSize)\n    .attr('x', iconSize / -2)\n    .attr('y', iconSize / -2)\n    .append('g')\n    .attr('class', 'node__icon__fill');\n\n  paths[node.type].forEach(path => {\n    g.append('path').attr('d', path);\n  });\n\n  return svg;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport 'd3-transition';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { select, event } from 'd3-selection';\nimport { curveBasis, line } from 'd3-shape';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport {\n  toggleNodeClicked,\n  toggleNodeHovered,\n  updateChartSize\n} from '../../actions';\nimport { getLayout, getZoomPosition } from '../../selectors/layout';\nimport { getCentralNode, getLinkedNodes } from '../../selectors/linked-nodes';\nimport icon from './icon';\nimport './styles/flowchart.css';\n\nconst DURATION = 700;\n\n/**\n * Display a pipeline flowchart, mostly rendered with D3\n */\nexport class FlowChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tooltipVisible: false,\n      tooltipIsRight: false,\n      tooltipText: null,\n      tooltipX: 0,\n      tooltipY: 0\n    };\n\n    this.containerRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.wrapperRef = React.createRef();\n    this.edgesRef = React.createRef();\n    this.nodesRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // Create D3 element selectors\n    this.el = {\n      svg: select(this.svgRef.current),\n      wrapper: select(this.wrapperRef.current),\n      edgeGroup: select(this.edgesRef.current),\n      nodeGroup: select(this.nodesRef.current)\n    };\n\n    this.updateChartSize();\n    this.initZoomBehaviour();\n    this.drawChart();\n    this.zoomChart();\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.visibleNav !== this.props.visibleNav) {\n      this.updateChartSize();\n    }\n    if (prevProps.zoom !== this.props.zoom) {\n      this.zoomChart();\n    }\n    this.drawChart();\n  }\n\n  /**\n   * Configure globals for the container dimensions,\n   * and apply them to the chart SVG\n   */\n  updateChartSize() {\n    const {\n      left,\n      top,\n      width,\n      height\n    } = this.containerRef.current.getBoundingClientRect();\n    const navOffset = this.getNavOffset(width);\n    this.props.onUpdateChartSize({\n      x: left,\n      y: top,\n      outerWidth: width,\n      outerHeight: height,\n      width: width - navOffset,\n      height,\n      navOffset\n    });\n  }\n\n  getNavOffset(width) {\n    const navWidth = 300; // from _variables.scss\n    const breakpointSmall = 480; // from _variables.scss\n    if (this.props.visibleNav && width > breakpointSmall) {\n      return navWidth;\n    }\n    return 0;\n  }\n\n  /**\n   * Handle window resize\n   */\n  handleWindowResize = () => {\n    this.updateChartSize();\n  };\n\n  /**\n   * Setup D3 zoom behaviour on component mount\n   */\n  initZoomBehaviour() {\n    this.zoomBehaviour = zoom().on('zoom', () => {\n      this.el.wrapper.attr('transform', event.transform);\n      this.hideTooltip();\n    });\n    this.el.svg.call(this.zoomBehaviour);\n  }\n\n  /**\n   * Zoom and scale to fit\n   */\n  zoomChart() {\n    const { chartSize, zoom } = this.props;\n    const { scale, translateX, translateY } = zoom;\n    const navOffset = this.getNavOffset(chartSize.outerWidth);\n    this.el.svg\n      .transition()\n      .duration(DURATION)\n      .call(\n        this.zoomBehaviour.transform,\n        zoomIdentity.translate(translateX + navOffset, translateY).scale(scale)\n      );\n  }\n\n  /**\n   * Render chart to the DOM with D3\n   */\n  drawChart() {\n    const { centralNode, layout, linkedNodes, textLabels } = this.props;\n    const { nodes, edges } = layout;\n\n    // Create selections\n    this.el.edges = this.el.edgeGroup\n      .selectAll('.edge')\n      .data(edges, edge => edge.id);\n\n    this.el.nodes = this.el.nodeGroup\n      .selectAll('.node')\n      .data(nodes, node => node.id);\n\n    // Set up line shape function\n    const lineShape = line()\n      .x(d => d.x)\n      .y(d => d.y)\n      .curve(curveBasis);\n\n    // Create edges\n    const enterEdges = this.el.edges\n      .enter()\n      .append('g')\n      .attr('class', 'edge')\n      .attr('opacity', 0);\n\n    enterEdges.append('path').attr('marker-end', d => `url(#arrowhead)`);\n\n    this.el.edges\n      .exit()\n      .transition('exit-edges')\n      .duration(DURATION)\n      .attr('opacity', 0)\n      .remove();\n\n    this.el.edges = this.el.edges.merge(enterEdges);\n\n    this.el.edges\n      .classed(\n        'edge--faded',\n        ({ source, target }) =>\n          centralNode && (!linkedNodes[source] || !linkedNodes[target])\n      )\n      .transition('show-edges')\n      .duration(DURATION)\n      .attr('opacity', 1);\n\n    this.el.edges\n      .select('path')\n      .transition('update-edges')\n      .duration(DURATION)\n      .attrTween('d', function(edge) {\n        const current = edge.points && lineShape(edge.points);\n        const previous = select(this).attr('d') || current;\n        return interpolatePath(previous, current);\n      });\n\n    // Create nodes\n    const enterNodes = this.el.nodes\n      .enter()\n      .append('g')\n      .attr('tabindex', '0')\n      .attr('class', 'node');\n\n    enterNodes\n      .attr('transform', node => `translate(${node.x}, ${node.y})`)\n      .attr('opacity', 0);\n\n    enterNodes.append('circle').attr('r', 25);\n\n    enterNodes.append('rect');\n\n    enterNodes.append(icon);\n\n    enterNodes\n      .append('text')\n      .text(node => node.name)\n      .attr('text-anchor', 'middle')\n      .attr('dy', 4);\n\n    this.el.nodes\n      .exit()\n      .transition('exit-nodes')\n      .duration(DURATION)\n      .attr('opacity', 0)\n      .remove();\n\n    this.el.nodes = this.el.nodes\n      .merge(enterNodes)\n      .classed('node--parameters', node => node.type === 'parameters')\n      .classed('node--data', node => node.type === 'data')\n      .classed('node--task', node => node.type === 'task')\n      .classed('node--icon', !textLabels)\n      .classed('node--text', textLabels)\n      .classed('node--active', node => node.active)\n      .classed('node--highlight', node => centralNode && linkedNodes[node.id])\n      .classed('node--faded', node => centralNode && !linkedNodes[node.id])\n      .on('click', this.handleNodeClick)\n      .on('mouseover', this.handleNodeMouseOver)\n      .on('mouseout', this.handleNodeMouseOut)\n      .on('focus', this.handleNodeMouseOver)\n      .on('blur', this.handleNodeMouseOut)\n      .on('keydown', this.handleNodeKeyDown);\n\n    this.el.nodes\n      .transition('update-nodes')\n      .duration(DURATION)\n      .attr('opacity', 1)\n      .attr('transform', node => `translate(${node.x}, ${node.y})`)\n      .end()\n      .catch(() => {})\n      .finally(() => {\n        // Sort nodes so tab focus order follows X/Y position\n        this.el.nodes.sort((a, b) => a.order - b.order);\n      });\n\n    this.el.nodes\n      .select('rect')\n      .attr('width', node => node.width - 5)\n      .attr('height', node => node.height - 5)\n      .attr('x', node => (node.width - 5) / -2)\n      .attr('y', node => (node.height - 5) / -2)\n      .attr('rx', node => (node.type === 'data' ? node.height / 2 : 0));\n  }\n\n  /**\n   * Enable a node's focus state and highlight linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeClick = node => {\n    this.props.onToggleNodeClicked(node.id);\n    event.stopPropagation();\n  };\n\n  /**\n   * Remove a node's focus state and dim linked nodes\n   */\n  handleChartClick = () => {\n    this.props.onToggleNodeClicked(null);\n  };\n\n  /**\n   * Enable a node's active state, show tooltip, and highlight linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOver = node => {\n    this.props.onToggleNodeHovered(node.id);\n    this.showTooltip(node);\n  };\n\n  /**\n   * Remove a node's active state, hide tooltip, and dim linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOut = () => {\n    this.props.onToggleNodeHovered(null);\n    this.hideTooltip();\n  };\n\n  /**\n   * Handle keydown event when a node is focused\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeKeyDown = node => {\n    const ENTER = 13;\n    const ESCAPE = 27;\n    if (event.keyCode === ENTER) {\n      this.handleNodeClick(node);\n    }\n    if (event.keyCode === ESCAPE) {\n      this.handleChartClick();\n      this.handleNodeMouseOut(node);\n    }\n  };\n\n  /**\n   * Show, fill and and position the tooltip\n   * @param {Object} node A node datum\n   */\n  showTooltip(node) {\n    const { chartSize } = this.props;\n    const eventOffset = event.target.getBoundingClientRect();\n    const navOffset = this.getNavOffset(chartSize.outerWidth);\n    const isRight = eventOffset.left - navOffset > chartSize.width / 2;\n    const xOffset = isRight\n      ? eventOffset.left - (chartSize.width + navOffset)\n      : eventOffset.left;\n    this.setState({\n      tooltipVisible: true,\n      tooltipIsRight: isRight,\n      tooltipText: node.name,\n      tooltipX: xOffset - chartSize.x + eventOffset.width / 2,\n      tooltipY: eventOffset.top - chartSize.y\n    });\n  }\n\n  /**\n   * Hide the tooltip\n   */\n  hideTooltip() {\n    if (this.state.tooltipVisible) {\n      this.setState({\n        tooltipVisible: false\n      });\n    }\n  }\n\n  /**\n   * Render React elements\n   */\n  render() {\n    const { outerWidth, outerHeight } = this.props.chartSize;\n    const {\n      tooltipVisible,\n      tooltipIsRight,\n      tooltipText,\n      tooltipX,\n      tooltipY\n    } = this.state;\n\n    return (\n      <div\n        className=\"pipeline-flowchart kedro\"\n        ref={this.containerRef}\n        onClick={this.handleChartClick}>\n        <svg\n          className=\"pipeline-flowchart__graph\"\n          width={outerWidth}\n          height={outerHeight}\n          ref={this.svgRef}>\n          <defs>\n            <marker\n              id=\"arrowhead\"\n              className=\"pipeline-flowchart__arrowhead\"\n              viewBox=\"0 0 10 10\"\n              refX=\"7\"\n              refY=\"5\"\n              markerUnits=\"strokeWidth\"\n              markerWidth=\"8\"\n              markerHeight=\"6\"\n              orient=\"auto\">\n              <path d=\"M 0 0 L 10 5 L 0 10 L 4 5 z\" />\n            </marker>\n          </defs>\n          <g ref={this.wrapperRef}>\n            <g className=\"pipeline-flowchart__edges\" ref={this.edgesRef} />\n            <g\n              id=\"nodes\"\n              className=\"pipeline-flowchart__nodes\"\n              ref={this.nodesRef}\n            />\n          </g>\n        </svg>\n        <div\n          className={classnames('pipeline-flowchart__tooltip kedro', {\n            'tooltip--visible': tooltipVisible,\n            'tooltip--right': tooltipIsRight\n          })}\n          style={{ transform: `translate(${tooltipX}px, ${tooltipY}px)` }}>\n          <span>{tooltipText}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  chartSize: state.chartSize,\n  layout: getLayout(state),\n  linkedNodes: getLinkedNodes(state),\n  centralNode: getCentralNode(state),\n  textLabels: state.textLabels,\n  view: state.view,\n  zoom: getZoomPosition(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodeClicked: nodeClicked => {\n    dispatch(toggleNodeClicked(nodeClicked));\n  },\n  onToggleNodeHovered: nodeHovered => {\n    dispatch(toggleNodeHovered(nodeHovered));\n  },\n  onUpdateChartSize: chartSize => {\n    dispatch(updateChartSize(chartSize));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Checkbox from '@quantumblack/kedro-ui/lib/components/checkbox';\nimport Dropdown from '@quantumblack/kedro-ui/lib/components/dropdown';\nimport '@quantumblack/kedro-ui/lib/components/menu-option/menu-option.css';\nimport { toggleTagActive, toggleTagFilter } from '../../actions';\nimport { getTagData, getTagCount } from '../../selectors/tags';\nimport './tag-list.css';\n\n/**\n * A Dropdown displaying a list of tags with checkboxes to toggle them on/off\n * @param {Object} tagCount Number of enabled and active tags\n * @param {Function} onToggleTagActive Handle toggling a tag's active state\n * @param {Function} onToggleTagFilter Handle toggling a tag's enabled state\n * @param {Array} tags List of tags for given pipline\n * @param {string} theme Kedro UI light/dark theme\n */\nexport const TagList = ({\n  tagCount,\n  onToggleTagActive,\n  onToggleTagFilter,\n  tags,\n  theme\n}) => (\n  <div className=\"pipeline-tags\">\n    <Dropdown\n      theme={theme}\n      width={null}\n      defaultText={`Tag filters (${tagCount.enabled}/${tagCount.total})`}>\n      <React.Fragment>\n        {tagCount.total > 0 ? (\n          <ul className=\"pipeline-tags__tag-list\">\n            {tags.map(tag => (\n              <li\n                key={`tag-${tag.id}`}\n                title={tag.name}\n                className=\"pipeline-tags__tag-list-item kui-menu-option\"\n                onMouseEnter={() => onToggleTagActive(tag.id, true)}\n                onMouseLeave={() => onToggleTagActive(tag.id, false)}>\n                <Checkbox\n                  checked={tag.enabled}\n                  label={<span>{tag.name}</span>}\n                  name={tag.id}\n                  onChange={(e, { checked }) =>\n                    onToggleTagFilter(tag.id, checked)\n                  }\n                  theme={theme}\n                />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"pipeline-tags__empty kui-menu-option\">\n            There are no tags used in this pipeline.\n          </div>\n        )}\n      </React.Fragment>\n    </Dropdown>\n  </div>\n);\n\nexport const mapStateToProps = state => {\n  const tags = getTagData(state);\n  const tagCount = getTagCount(state);\n  return {\n    tagCount,\n    tags,\n    theme: state.theme\n  };\n};\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleTagActive: (tagID, active) => {\n    dispatch(toggleTagActive(tagID, active));\n  },\n  onToggleTagFilter: (tagID, enabled) => {\n    dispatch(toggleTagFilter(tagID, enabled));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TagList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport Checkbox from '@quantumblack/kedro-ui/lib/components/checkbox';\nimport SearchBar from '@quantumblack/kedro-ui/lib/components/search-bar';\nimport utils from '@quantumblack/kedro-ui/lib/utils';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { getNodeData } from '../../selectors/nodes';\nimport {\n  toggleNodeHovered,\n  toggleNodeDisabled,\n  toggleNodesDisabled\n} from '../../actions';\nimport './node-list.css';\n\nconst { escapeRegExp, getHighlightedText, handleKeyEvent } = utils;\n\n/**\n * Scrollable list of toggleable nodes, with search & filter functionality\n */\nclass NodeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: ''\n    };\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.updateSearchValue = this.updateSearchValue.bind(this);\n  }\n\n  /**\n   * Add a new highlightedLabel field to each of the results\n   * @param {object} results\n   * @return {object} The results array with a new field added\n   */\n  highlightMatch(results) {\n    return results.map(result => ({\n      highlightedLabel: getHighlightedText(result.name, this.state.searchValue),\n      ...result\n    }));\n  }\n\n  /**\n   * Check whether a name matches the search text\n   * @param {string} name\n   * @param {string} searchValue\n   */\n  nodeMatchesSearch(node, searchValue) {\n    const valueRegex = searchValue\n      ? new RegExp(escapeRegExp(searchValue), 'gi')\n      : '';\n    return node.name.match(valueRegex);\n  }\n\n  /**\n   * Return only the results that match the search text\n   * @param {object} results\n   */\n  filterResults(results) {\n    return results.filter(node =>\n      this.nodeMatchesSearch(node, this.state.searchValue)\n    );\n  }\n\n  /**\n   * Listen for keyboard events, and trigger relevant actions\n   * @param {number} keyCode The key event keycode\n   */\n  handleKeyDown(event) {\n    handleKeyEvent(event.keyCode, {\n      escape: this.updateSearchValue.bind(this, '')\n    });\n  }\n\n  /**\n   * Apply the new search filter text to the component state\n   * @param {string} searchValue The term being searched\n   */\n  updateSearchValue(searchValue) {\n    this.setState({\n      searchValue\n    });\n  }\n\n  render() {\n    const {\n      onToggleAllNodes,\n      onToggleNodeHovered,\n      onToggleNodeDisabled,\n      nodes,\n      theme\n    } = this.props;\n    const { searchValue } = this.state;\n    const formattedNodes = this.highlightMatch(this.filterResults(nodes));\n\n    return (\n      <React.Fragment>\n        <div\n          className=\"pipeline-node-list-search\"\n          onKeyDown={this.handleKeyDown}>\n          <SearchBar\n            onChange={this.updateSearchValue}\n            value={searchValue}\n            theme={theme}\n          />\n        </div>\n        <Scrollbars\n          className=\"pipeline-node-list-scrollbars\"\n          style={{ width: 'auto' }}\n          autoHide\n          hideTracksWhenNotNeeded>\n          <div className=\"kedro\">\n            <h2 className=\"pipeline-node-list__toggle-title\">All Elements</h2>\n            <div className=\"pipeline-node-list__toggle-container\">\n              <button\n                onClick={() => onToggleAllNodes(formattedNodes, false)}\n                className=\"pipeline-node-list__toggle\">\n                <svg\n                  className=\"pipeline-node-list__icon pipeline-node-list__icon--check\"\n                  width=\"24\"\n                  height=\"24\">\n                  <polygon points=\"9.923 14.362 7.385 11.944 6 13.263 7.33384369 14.5336026 9.923 17 18 9.32 16.615 8\" />\n                </svg>\n                Check all\n              </button>\n              <button\n                onClick={() => onToggleAllNodes(formattedNodes, true)}\n                className=\"pipeline-node-list__toggle\">\n                <svg\n                  className=\"pipeline-node-list__icon pipeline-node-list__icon--uncheck\"\n                  width=\"24\"\n                  height=\"24\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n                </svg>\n                Uncheck all\n              </button>\n            </div>\n          </div>\n          <ul className=\"pipeline-node-list\">\n            {formattedNodes.map(node => (\n              <li\n                key={node.id}\n                className={classnames('pipeline-node', {\n                  'pipeline-node--active': node.active,\n                  'pipeline-node--disabled':\n                    node.disabled_tag || node.disabled_view\n                })}\n                title={node.name}\n                onMouseEnter={() => onToggleNodeHovered(node.id)}\n                onMouseLeave={() => onToggleNodeHovered(null)}>\n                <Checkbox\n                  checked={!node.disabled_node}\n                  label={\n                    <span\n                      dangerouslySetInnerHTML={{\n                        __html: node.highlightedLabel\n                      }}\n                    />\n                  }\n                  name={node.name}\n                  onChange={(e, { checked }) =>\n                    onToggleNodeDisabled(node, !checked)\n                  }\n                  theme={theme}\n                />\n              </li>\n            ))}\n          </ul>\n        </Scrollbars>\n      </React.Fragment>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  nodes: getNodeData(state),\n  theme: state.theme\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodeHovered: nodeID => {\n    dispatch(toggleNodeHovered(nodeID));\n  },\n  onToggleNodeDisabled: (node, isDisabled) => {\n    dispatch(toggleNodeDisabled(node.id, isDisabled));\n  },\n  onToggleAllNodes: (formattedNodes, disabled) => {\n    dispatch(\n      toggleNodesDisabled(formattedNodes.map(node => node.id), disabled)\n    );\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NodeList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport RadioButton from '@quantumblack/kedro-ui/lib/components/radio-button';\nimport Toggle from '@quantumblack/kedro-ui/lib/components/toggle';\nimport { changeView, toggleParameters } from '../../actions';\nimport TagList from '../tag-list';\nimport NodeList from '../node-list';\nimport './chart-ui.css';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\n/**\n * Main contols for filtering the chart data\n * @param {Boolean} hasData Whether the chart data has been loaded\n * @param {Function} onToggleParameters Handle toggling parameters on/off\n * @param {Function} onToggleTextLabels Handle toggling text labels on/off\n * @param {Function} onChangeView Handle changing view between combined/task/data\n * @param {Boolean} parameters Whether parameters are displayed\n * @param {Boolean} textLabels Whether text labels are displayed\n * @param {string} theme Kedro UI light/dark theme\n * @param {string} view Which node types are displayed: combined/task/data\n */\nexport const ChartUI = ({\n  hasData,\n  onToggleParameters,\n  onChangeView,\n  parameters,\n  theme,\n  view\n}) =>\n  hasData ? (\n    <Scrollbars autoHide hideTracksWhenNotNeeded>\n      <div className=\"pipeline-ui\">\n        <ul className=\"pipeline-ui__view\">\n          <li>\n            <RadioButton\n              checked={view === 'combined'}\n              label=\"Combined\"\n              name=\"view\"\n              onChange={onChangeView}\n              value=\"combined\"\n              theme={theme}\n            />\n          </li>\n          <li>\n            <RadioButton\n              checked={view === 'data'}\n              label=\"Data\"\n              name=\"view\"\n              onChange={onChangeView}\n              value=\"data\"\n              theme={theme}\n            />\n          </li>\n          <li>\n            <RadioButton\n              checked={view === 'task'}\n              label=\"Node\"\n              name=\"view\"\n              onChange={onChangeView}\n              value=\"task\"\n              theme={theme}\n            />\n          </li>\n        </ul>\n        <Toggle\n          onChange={onToggleParameters}\n          label=\"Parameters\"\n          value={parameters}\n          checked={parameters}\n          theme={theme}\n        />\n        <TagList />\n        <NodeList />\n      </div>\n    </Scrollbars>\n  ) : null;\n\nexport const mapStateToProps = state => ({\n  hasData: Boolean(state.nodes.length),\n  parameters: state.parameters,\n  theme: state.theme,\n  view: state.view\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onChangeView: (e, { value }) => {\n    dispatch(changeView(value));\n  },\n  onToggleParameters: (e, { value }) => {\n    dispatch(toggleParameters(value));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChartUI);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  x: 2,\n  y: 5,\n  width: 20,\n  height: 2\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  x: 2,\n  y: 11,\n  width: 20,\n  height: 2\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  x: 2,\n  y: 17,\n  width: 20,\n  height: 2\n});\n\nvar SvgMenuIcon = function SvgMenuIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMenuIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/menu-icon.150ff341.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport classnames from 'classnames';\nimport Icon from '@quantumblack/kedro-ui/lib/components/icon';\nimport ChartUI from '../chart-ui';\nimport { ReactComponent as MenuIcon } from './menu-icon.svg';\nimport './sidebar.css';\n\n/**\n * Hamburger menu button\n * @param {Function} props.onToggle Show menu on click\n */\nexport const ShowMenuButton = ({ onToggle }) => (\n  <button\n    aria-label=\"Show menu\"\n    className=\"pipeline-sidebar__show-menu pipeline-sidebar__icon-button\"\n    onClick={onToggle}>\n    <MenuIcon className=\"pipeline-icon\" />\n  </button>\n);\n\n/**\n * ⨉-shaped button to close the menu. Hidden when menu is closed.\n * @param {Function} props.onToggle Show menu on click\n * @param {string} props.theme Kedro-UI theme: 'light' or 'dark'\n * @param {Boolean} props.visible Whether nav is visible\n */\nexport const HideMenuButton = ({ onToggle, theme, visible }) => (\n  <button\n    aria-label=\"Hide menu\"\n    className={classnames(\n      'pipeline-sidebar__hide-menu pipeline-sidebar__icon-button',\n      {\n        'pipeline-sidebar__hide-menu--visible': visible\n      }\n    )}\n    onClick={onToggle}>\n    <Icon type=\"close\" title=\"Close\" theme={theme} />\n  </button>\n);\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n * @param {Object} props onToggle, theme, and visible\n */\nexport const Sidebar = props => (\n  <>\n    <ShowMenuButton onToggle={props.onToggle} />\n    <nav\n      className={classnames('pipeline-sidebar', {\n        'pipeline-sidebar--visible': props.visible\n      })}>\n      <HideMenuButton {...props} />\n      <ChartUI />\n    </nav>\n  </>\n);\n\nexport default Sidebar;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M10 0a10 10 0 1 1 0 20 10 10 0 0 1 0-20zm0 2v16a8 8 0 1 0 0-16z\"\n});\n\nvar SvgThemeIcon = function SvgThemeIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgThemeIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/theme-icon.de589920.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M22 0v20H7.3L0 10 7.3 0H22zm-6.2 5h-3.6L10 15h2l.3-1.8h3.4L16 15H18L15.8 5zm-1.5 1.7l1 4.7h-2.6l1-4.7h.6z\"\n});\n\nvar SvgLabelIcon = function SvgLabelIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 22 20\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLabelIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/label-icon.7024a8de.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { toggleTextLabels, toggleTheme } from '../../actions';\nimport { ReactComponent as ThemeIcon } from './theme-icon.svg';\nimport { ReactComponent as LabelIcon } from './label-icon.svg';\nimport './icon-toolbar.css';\n\nexport const ThemeButton = ({ onToggle, theme }) => (\n  <button\n    aria-live=\"polite\"\n    aria-label={`Change to ${theme === 'light' ? 'dark' : 'light'} theme`}\n    className={classnames('pipeline-toggle-theme pipeline-icon-button', {\n      'pipeline-toggle-theme--light': theme === 'light',\n      'pipeline-toggle-theme--dark': theme === 'dark'\n    })}\n    onClick={() => onToggle(theme === 'light' ? 'dark' : 'light')}>\n    <span>Toggle theme</span>\n    <ThemeIcon className=\"pipeline-icon\" />\n  </button>\n);\n\nexport const LabelButton = ({ onToggle, textLabels }) => (\n  <button\n    aria-live=\"polite\"\n    className={classnames('pipeline-toggle-labels pipeline-icon-button', {\n      'pipeline-toggle-theme--show-labels': textLabels\n    })}\n    onClick={() => onToggle(!textLabels)}>\n    <span>{textLabels ? 'Hide' : 'Show'} text labels</span>\n    <LabelIcon className=\"pipeline-icon\" />\n  </button>\n);\n\n/**\n * Main contols for filtering the chart data\n * @param {Function} onToggleTheme Handle toggling theme between light/dark\n * @param {Function} onToggleTextLabels Handle toggling text labels on/off\n * @param {Boolean} textLabels Whether text labels are displayed\n * @param {string} theme Kedro UI light/dark theme\n */\nexport const IconToolbar = ({\n  onToggleTextLabels,\n  onToggleTheme,\n  textLabels,\n  theme\n}) => (\n  <ul className=\"pipeline-icon-toolbar kedro\">\n    <li>\n      <ThemeButton onToggle={onToggleTheme} theme={theme} />\n    </li>\n    <li>\n      <LabelButton onToggle={onToggleTextLabels} textLabels={textLabels} />\n    </li>\n  </ul>\n);\n\nexport const mapStateToProps = state => ({\n  textLabels: state.textLabels,\n  theme: state.theme\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleTextLabels: value => {\n    dispatch(toggleTextLabels(Boolean(value)));\n  },\n  onToggleTheme: value => {\n    dispatch(toggleTheme(value));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IconToolbar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport FlowChart from '../flowchart';\nimport Sidebar from '../sidebar';\nimport IconToolbar from '../icon-toolbar';\nimport './wrapper.css';\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n */\nexport class Wrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visibleNav: true\n    };\n  }\n\n  toggleNav() {\n    const visibleNav = !this.state.visibleNav;\n    this.setState({ visibleNav });\n  }\n\n  render() {\n    const { visibleNav } = this.state;\n    const { theme } = this.props;\n\n    return (\n      <div\n        className={classnames('kedro-pipeline', {\n          'kui-theme--dark': theme === 'dark',\n          'kui-theme--light': theme === 'light'\n        })}>\n        <div className=\"pipeline-wrapper\">\n          <FlowChart visibleNav={visibleNav} />\n        </div>\n        <IconToolbar />\n        <Sidebar\n          onToggle={this.toggleNav.bind(this)}\n          theme={theme}\n          visible={visibleNav}\n        />\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(Wrapper);\n","/**\n * Check whether data is in expected format\n * @param {Object} data - The parsed data input\n * @return {Boolean} True if valid for formatting\n */\nconst validateInput = data => {\n  const { isArray } = Array;\n  return (\n    data && isArray(data.edges) && isArray(data.nodes) && isArray(data.tags)\n  );\n};\n\n/**\n * Get unique, reproducible ID for each edge, based on its nodes\n * @param {Object} source - Name and type of the source node\n * @param {Object} target - Name and type of the target node\n */\nconst getEdgeID = (source, target) => [source, target].join('|');\n\n/**\n * Generate a new default pipeline state instance\n * @return {Object} Initial state\n */\nconst createPipelineState = () => ({\n  id: null,\n  // Nodes\n  nodes: [],\n  nodeName: {},\n  nodeFullName: {},\n  nodeType: {},\n  nodeIsParam: {},\n  nodeTags: {},\n  nodeDisabled: {},\n  nodeClicked: null,\n  nodeHovered: null,\n  // Edges\n  edges: [],\n  edgeSources: {},\n  edgeTargets: {},\n  edgeActive: {},\n  edgeDisabled: {},\n  // Tags\n  tags: [],\n  tagName: {},\n  tagActive: {},\n  tagEnabled: {}\n});\n\n/**\n * Add a new node if it doesn't already exist\n * @param {string} name - Default node name\n * @param {string} type - 'data' or 'task'\n * @param {Array} tags - List of associated tags\n */\nconst addNode = state => node => {\n  const { id } = node;\n  if (state.nodeName[id]) {\n    return;\n  }\n  state.nodes.push(id);\n  state.nodeName[id] = node.name;\n  state.nodeFullName[id] = node.full_name;\n  state.nodeType[id] = node.type;\n  state.nodeIsParam[id] = node.type === 'parameters';\n  state.nodeTags[id] = node.tags || [];\n};\n\n/**\n * Create a new link between two nodes and add it to the edges array\n * @param {Object} source - Parent node\n * @param {Object} target - Child node\n */\nconst addEdge = state => ({ source, target }) => {\n  const id = getEdgeID(source, target);\n  if (state.edges.includes(id)) {\n    return;\n  }\n  state.edges.push(id);\n  state.edgeSources[id] = source;\n  state.edgeTargets[id] = target;\n};\n\n/**\n * Add a new Tag if it doesn't already exist\n * @param {string} name - Default node name\n */\nconst addTag = state => tag => {\n  const { id } = tag;\n  state.tags.push(id);\n  state.tagName[id] = tag.name;\n};\n\n/**\n * Convert the pipeline data into a normalised state object\n * @param {Object} data Raw unformatted data input\n * @return {Object} Formatted, normalised state\n */\nconst formatData = data => {\n  const state = createPipelineState();\n\n  if (validateInput(data)) {\n    state.id = data.schema_id;\n    data.nodes.forEach(addNode(state));\n    data.edges.forEach(addEdge(state));\n    data.tags.forEach(addTag(state));\n  }\n\n  return state;\n};\n\nexport default formatData;\n","import {\n  getNumberArray,\n  randomIndex,\n  randomNumber,\n  getRandom,\n  getRandomName,\n  unique\n} from './index';\n\n//--- Config variables ---//\n\nconst DATA_NODE_COUNT = 30;\nconst MAX_CONNECTED_NODES = 4;\nconst MAX_LAYER_COUNT = 20;\nconst MAX_MESSAGE_WORD_LENGTH = 15;\nconst MAX_NODE_TAG_COUNT = 5;\nconst MAX_TAG_COUNT = 20;\nconst MAX_TIMESTAMP_OFFSET = 9999999999;\nconst PARAMETERS_FREQUENCY = 0.05;\nconst TASK_NODE_COUNT = 10;\n\n/**\n * Generate a random pipeline dataset\n */\nclass Pipeline {\n  constructor() {\n    this.CONNECTION_COUNT = randomNumber(MAX_CONNECTED_NODES);\n    this.LAYER_COUNT = randomNumber(MAX_LAYER_COUNT);\n    this.TAG_COUNT = randomNumber(MAX_TAG_COUNT);\n    this.nodes = this.getNodes();\n    this.tags = this.generateTags();\n  }\n\n  /**\n   * Generate a name for each node.\n   * Put 'parameters_' in front of 1 in 20.\n   * @param {number} paramFreq How often nodes should include 'parameters' in their name\n   */\n  getRandomNodeName(paramFreq) {\n    const name = getRandomName(randomNumber(10));\n    const params = Math.random() < paramFreq ? 'parameters_' : '';\n    return params + name;\n  }\n\n  /**\n   * Generate a list of nodes\n   * @param {number} count The number of nodes to generate\n   * @param {Function} getLayer A callback to create a random layer number\n   * @param {number} paramFreq How often nodes should include 'parameters' in their name\n   * @param {string} type\n   */\n  generateNodeList(count, getLayer, paramFreq, type) {\n    return getNumberArray(count)\n      .map(() => this.getRandomNodeName(paramFreq))\n      .filter(unique)\n      .map(id => {\n        const name = id.replace(/_/g, ' ');\n        return {\n          id: `${type}/${id}`,\n          name,\n          full_name: name,\n          type: id.includes('param') ? 'parameters' : type,\n          layer: getLayer()\n        };\n      });\n  }\n\n  /**\n   * Get lists of both data and task nodes\n   */\n  getNodes() {\n    return {\n      data: this.generateNodeList(\n        DATA_NODE_COUNT,\n        () => randomIndex(this.LAYER_COUNT + 1),\n        PARAMETERS_FREQUENCY,\n        'data'\n      ),\n      task: this.generateNodeList(\n        TASK_NODE_COUNT,\n        () => randomIndex(this.LAYER_COUNT) + 0.5,\n        0,\n        'task'\n      )\n    };\n  }\n\n  /**\n   * Generate a random list of tags\n   */\n  generateTags() {\n    return getNumberArray(this.TAG_COUNT)\n      .map(() => getRandomName(randomNumber(MAX_NODE_TAG_COUNT)))\n      .filter(unique);\n  }\n\n  /**\n   * Select a random number of tags from the list of tags\n   */\n  getRandomTags() {\n    return getNumberArray(randomNumber(this.TAG_COUNT))\n      .map(() => this.tags[randomIndex(this.tags.length)])\n      .filter(unique);\n  }\n\n  /**\n   * Get connected data nodes for each task node\n   * @param {Function} condition Determine order of precedence\n   */\n  getConnectedNodes(condition) {\n    return getNumberArray(this.CONNECTION_COUNT)\n      .map(() => getRandom(this.nodes.data.filter(condition)))\n      .filter(Boolean)\n      .map(d => d.id)\n      .filter(unique);\n  }\n\n  /**\n   * Get a complete JSON schema\n   */\n  getSchema() {\n    let nodes = this.nodes.task\n      .concat(this.nodes.data)\n      .map(node => ({ ...node, tags: this.getRandomTags() }));\n\n    const edges = [];\n    this.nodes.task.forEach(node => {\n      this.getConnectedNodes(d => d.layer < node.layer).forEach(target => {\n        edges.push({\n          source: node.id,\n          target\n        });\n      });\n      this.getConnectedNodes(d => d.layer > node.layer).forEach(source => {\n        edges.push({\n          source,\n          target: node.id\n        });\n      });\n    });\n\n    // Remove unconnected nodes\n    nodes = nodes.filter(\n      node =>\n        edges.findIndex(\n          edge => node.id === edge.source || node.id === edge.target\n        ) !== -1\n    );\n\n    const tags = nodes\n      .reduce((tags, node) => tags.concat(node.tags), [])\n      .filter(unique)\n      .map(tag => ({ name: tag, id: tag }));\n\n    return {\n      nodes,\n      edges,\n      tags\n    };\n  }\n\n  /**\n   * Generate the full pipeline datum, including ID, timestamp,\n   * random message and JSON schema\n   */\n  getDatum() {\n    return {\n      schema_id: randomNumber(999999999999999),\n      message: getRandomName(randomNumber(MAX_MESSAGE_WORD_LENGTH), ' '),\n      created_ts: new Date().getTime() - randomNumber(MAX_TIMESTAMP_OFFSET),\n      ...this.getSchema()\n    };\n  }\n}\n\nconst generateRandomPipeline = () => new Pipeline().getDatum();\n\nexport default generateRandomPipeline;\n","export default {\n  created_ts: '1551452832000',\n  schema_id: '310750827599783',\n  message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  tags: [\n    {\n      id: 'Nulla',\n      name: 'Nulla'\n    },\n    {\n      id: 'pulvinar',\n      name: 'pulvinar'\n    },\n    {\n      id: 'volutpat',\n      name: 'volutpat'\n    },\n    {\n      id: 'enim',\n      name: 'enim'\n    },\n    {\n      id: 'consectetur',\n      name: 'consectetur'\n    }\n  ],\n  edges: [\n    {\n      target: 'task/consectetur',\n      source: 'data/Lorem'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/ipsum'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/dolor'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/sit'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/amet'\n    },\n    {\n      target: 'data/Aliquam',\n      source: 'task/consectetur'\n    },\n    {\n      target: 'data/eu',\n      source: 'task/consectetur'\n    },\n    {\n      target: 'data/accumsan',\n      source: 'task/consectetur'\n    },\n    {\n      target: 'data/mauris',\n      source: 'task/consectetur'\n    }\n  ],\n  nodes: [\n    {\n      tags: ['Nulla', 'pulvinar', 'enim', 'consectetur', 'volutpat'],\n      id: 'task/consectetur',\n      type: 'task',\n      full_name: 'consectetur',\n      name: 'consectetur'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/mauris',\n      type: 'data',\n      full_name: 'mauris',\n      name: 'mauris'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/Lorem',\n      type: 'data',\n      full_name: 'Lorem',\n      name: 'Lorem'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/dolor',\n      type: 'data',\n      full_name: 'dolor',\n      name: 'dolor'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/eu',\n      type: 'data',\n      full_name: 'eu',\n      name: 'eu'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/accumsan',\n      type: 'data',\n      full_name: 'accumsan',\n      name: 'accumsan'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/ipsum',\n      type: 'data',\n      full_name: 'ipsum',\n      name: 'ipsum'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/sit',\n      type: 'data',\n      full_name: 'sit',\n      name: 'sit'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/Aliquam',\n      type: 'data',\n      full_name: 'Aliquam',\n      name: 'Aliquam'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/amet',\n      type: 'data',\n      full_name: 'amet',\n      name: 'amet'\n    }\n  ]\n};\n","export default {\n  tags: [\n    {\n      id: 'small',\n      name: 'small'\n    },\n    {\n      id: 'huge',\n      name: 'huge'\n    }\n  ],\n  nodes: [\n    {\n      id: 'task/salmon',\n      name: 'salmon',\n      full_name: 'salmon',\n      tags: ['huge', 'small'],\n      type: 'task'\n    },\n    {\n      id: 'task/shark',\n      name: 'shark',\n      full_name: 'shark',\n      tags: [],\n      type: 'task'\n    },\n    {\n      id: 'task/trout',\n      name: 'trout',\n      full_name: 'trout',\n      tags: [],\n      type: 'task'\n    },\n    {\n      id: 'data/whale',\n      name: 'whale',\n      full_name: 'whale',\n      tags: [],\n      type: 'data'\n    },\n    {\n      id: 'data/dog',\n      name: 'dog',\n      full_name: 'dog',\n      tags: ['small', 'huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/cat',\n      name: 'cat',\n      full_name: 'cat',\n      tags: ['small', 'huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/parameters_rabbit',\n      name: 'parameters_rabbit',\n      full_name: 'parameters_rabbit',\n      tags: ['small', 'huge'],\n      type: 'parameters'\n    },\n    {\n      id: 'data/parameters',\n      name: 'parameters',\n      full_name: 'parameters',\n      tags: ['small', 'huge'],\n      type: 'parameters'\n    },\n    {\n      id: 'data/sheep',\n      name: 'sheep',\n      full_name: 'sheep',\n      tags: ['small', 'huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/horse',\n      name: 'horse',\n      full_name: 'horse',\n      tags: ['small', 'huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/weasel',\n      name: 'weasel',\n      full_name: 'weasel',\n      tags: [],\n      type: 'data'\n    },\n    {\n      id: 'data/elephant',\n      name: 'elephant',\n      full_name: 'elephant',\n      tags: [],\n      type: 'data'\n    },\n    {\n      id: 'data/bear',\n      name: 'bear',\n      full_name: 'bear',\n      tags: [],\n      type: 'data'\n    },\n    {\n      id: 'data/giraffe',\n      name: 'giraffe',\n      full_name: 'giraffe',\n      tags: [],\n      type: 'data'\n    },\n    {\n      id: 'data/pig',\n      name: 'pig',\n      full_name: 'pig',\n      tags: ['small', 'huge'],\n      type: 'data'\n    }\n  ],\n  edges: [\n    {\n      target: 'task/salmon',\n      source: 'data/cat'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/dog'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/parameters'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/parameters_rabbit'\n    },\n    {\n      target: 'data/pig',\n      source: 'task/salmon'\n    },\n    {\n      target: 'data/horse',\n      source: 'task/salmon'\n    },\n    {\n      target: 'data/sheep',\n      source: 'task/salmon'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/cat'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/weasel'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/elephant'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/bear'\n    },\n    {\n      target: 'data/sheep',\n      source: 'task/shark'\n    },\n    {\n      target: 'data/pig',\n      source: 'task/shark'\n    },\n    {\n      target: 'data/giraffe',\n      source: 'task/shark'\n    },\n    {\n      target: 'task/trout',\n      source: 'data/pig'\n    },\n    {\n      target: 'data/whale',\n      source: 'task/trout'\n    }\n  ]\n};\n","export default {\n  edges: [\n    {\n      source: 'data/Interaction Raw',\n      target: 'task/Load Raw Interaction Data'\n    },\n    {\n      source: 'task/Load Raw Interaction Data',\n      target: 'data/Interaction Primary'\n    },\n    {\n      source: 'data/Country Raw',\n      target: 'task/Load Raw Country Data'\n    },\n    {\n      source: 'task/Load Raw Country Data',\n      target: 'data/Country Primary'\n    },\n    {\n      source: 'data/Shopper Spend Raw',\n      target: 'task/Load Raw Shopper Spend Data'\n    },\n    {\n      source: 'task/Load Raw Shopper Spend Data',\n      target: 'data/Shopper Spend Primary'\n    },\n    {\n      source: 'data/Interaction Primary',\n      target: 'task/Preprocess Primary Interaction Data'\n    },\n    {\n      source: 'task/Preprocess Primary Interaction Data',\n      target: 'data/Interaction Intermediate'\n    },\n    {\n      source: 'data/Country Primary',\n      target: 'task/Preprocess Primary Country Data'\n    },\n    {\n      source: 'task/Preprocess Primary Country Data',\n      target: 'data/Country Intermediate'\n    },\n    {\n      source: 'data/Shopper Spend Primary',\n      target: 'task/Preprocess Primary Shopper Spend Data'\n    },\n    {\n      source: 'task/Preprocess Primary Shopper Spend Data',\n      target: 'data/Shopper Spend Intermediate'\n    },\n    {\n      source: 'data/CRM Predictions',\n      target: 'task/Create Shopper Spend Features'\n    },\n    {\n      source: 'data/Interaction Intermediate',\n      target: 'task/Create Shopper Spend Features'\n    },\n    {\n      source: 'data/Country Intermediate',\n      target: 'task/Create Shopper Spend Features'\n    },\n    {\n      source: 'data/Shopper Spend Intermediate',\n      target: 'task/Create Shopper Spend Features'\n    },\n    {\n      source: 'task/Create Shopper Spend Features',\n      target: 'data/Shopper Spend Features'\n    },\n    {\n      source: 'data/CRM Predictions',\n      target: 'task/Create Shopper Churn Features'\n    },\n    {\n      source: 'data/Interaction Intermediate',\n      target: 'task/Create Shopper Churn Features'\n    },\n    {\n      source: 'data/Country Intermediate',\n      target: 'task/Create Shopper Churn Features'\n    },\n    {\n      source: 'data/Shopper Spend Intermediate',\n      target: 'task/Create Shopper Churn Features'\n    },\n    {\n      source: 'task/Create Shopper Churn Features',\n      target: 'data/Shopper Churn Features'\n    },\n    {\n      source: 'data/Vendor Master',\n      target: 'task/Prepare Vendor Input'\n    },\n    {\n      source: 'data/Salesforce CRM',\n      target: 'task/Prepare Vendor Input'\n    },\n    {\n      source: 'task/Prepare Vendor Input',\n      target: 'data/Vendor Predictions'\n    },\n    {\n      source: 'data/Vendor Master',\n      target: 'task/Prepare CRM Input'\n    },\n    {\n      source: 'data/Salesforce Accounts',\n      target: 'task/Prepare CRM Input'\n    },\n    {\n      source: 'task/Prepare CRM Input',\n      target: 'data/CRM Predictions'\n    },\n    {\n      source: 'data/Vendor Predictions',\n      target: 'task/Predictive Sales Model'\n    },\n    {\n      source: 'data/params: Sales Model',\n      target: 'task/Predictive Sales Model'\n    },\n    {\n      source: 'data/Shopper Spend Features',\n      target: 'task/Predictive Sales Model'\n    },\n    {\n      source: 'task/Predictive Sales Model',\n      target: 'data/Sales Validation Results'\n    },\n    {\n      source: 'task/Predictive Sales Model',\n      target: 'data/Sales Trained Model'\n    },\n    {\n      source: 'data/Shopper Churn Features',\n      target: 'task/Predictive Engagement Model'\n    },\n    {\n      source: 'data/params: Engagement Model',\n      target: 'task/Predictive Engagement Model'\n    },\n    {\n      source: 'task/Predictive Engagement Model',\n      target: 'data/Engagement Validation Results'\n    },\n    {\n      source: 'task/Predictive Engagement Model',\n      target: 'data/Engagement Trained Model'\n    },\n    {\n      source: 'data/Sales Trained Model',\n      target: 'task/Sales Model Explainable AI'\n    },\n    {\n      source: 'data/Shopper Spend Features',\n      target: 'task/Sales Model Explainable AI'\n    },\n    {\n      source: 'task/Sales Model Explainable AI',\n      target: 'data/Sales Model Explanations'\n    },\n    {\n      source: 'data/Engagement Trained Model',\n      target: 'task/Engagement Model Explainable AI'\n    },\n    {\n      source: 'data/Shopper Churn Features',\n      target: 'task/Engagement Model Explainable AI'\n    },\n    {\n      source: 'task/Engagement Model Explainable AI',\n      target: 'data/Engagement Model Explanations'\n    },\n    {\n      source: 'data/Sales Trained Model',\n      target: 'task/Perform Digital Analysis'\n    },\n    {\n      source: 'data/params: Optimisation',\n      target: 'task/Perform Digital Analysis'\n    },\n    {\n      source: 'data/Shopper Spend Features',\n      target: 'task/Perform Digital Analysis'\n    },\n    {\n      source: 'task/Perform Digital Analysis',\n      target: 'data/Digital Analysis'\n    },\n    {\n      source: 'data/params: Optimisation',\n      target: 'task/Engagement Recommendation Engine'\n    },\n    {\n      source: 'data/Engagement Trained Model',\n      target: 'task/Engagement Recommendation Engine'\n    },\n    {\n      source: 'data/Shopper Churn Features',\n      target: 'task/Engagement Recommendation Engine'\n    },\n    {\n      source: 'task/Engagement Recommendation Engine',\n      target: 'data/Engagement Recommendations'\n    },\n    {\n      source: 'data/Sales Model Explanations',\n      target: 'task/Sales Model Performance Monitoring'\n    },\n    {\n      source: 'data/Sales Validation Results',\n      target: 'task/Sales Model Performance Monitoring'\n    },\n    {\n      source: 'data/Engagement Validation Results',\n      target: 'task/Engagement Model Performance Monitoring'\n    },\n    {\n      source: 'data/Engagement Model Explanations',\n      target: 'task/Engagement Model Performance Monitoring'\n    },\n    {\n      source: 'data/params: Optimisation',\n      target: 'task/Multi-Channel Optimisation'\n    },\n    {\n      source: 'data/Action Cost Table',\n      target: 'task/Multi-Channel Optimisation'\n    },\n    {\n      source: 'data/Digital Analysis',\n      target: 'task/Multi-Channel Optimisation'\n    },\n    {\n      source: 'task/Multi-Channel Optimisation',\n      target: 'data/Multi-Channel Resolutions'\n    },\n    {\n      source: 'data/params: Optimisation',\n      target: 'task/Content Optimisation'\n    },\n    {\n      source: 'data/Digital Analysis',\n      target: 'task/Content Optimisation'\n    },\n    {\n      source: 'task/Content Optimisation',\n      target: 'data/Content Resolutions'\n    },\n    {\n      source: 'data/params: Optimisation',\n      target: 'task/Segment Journeys'\n    },\n    {\n      source: 'data/Content Resolutions',\n      target: 'task/Segment Journeys'\n    },\n    {\n      source: 'task/Segment Journeys',\n      target: 'data/Segment Journeys Allocations'\n    },\n    {\n      source: 'data/Multi-Channel Resolutions',\n      target: 'task/Generate Dashboard Inputs'\n    },\n    {\n      source: 'data/Segment Journeys Allocations',\n      target: 'task/Generate Dashboard Inputs'\n    },\n    {\n      source: 'data/Engagement Model Explanations',\n      target: 'task/Generate Dashboard Inputs'\n    },\n    {\n      source: 'data/Sales Model Explanations',\n      target: 'task/Generate Dashboard Inputs'\n    },\n    {\n      source: 'data/Content Resolutions',\n      target: 'task/Generate Dashboard Inputs'\n    },\n    {\n      source: 'task/Generate Dashboard Inputs',\n      target: 'data/Upselling Readiness Dashboard Input'\n    },\n    {\n      source: 'task/Generate Dashboard Inputs',\n      target: 'data/Lead Scoring Dashboard Input'\n    },\n    {\n      source: 'task/Generate Dashboard Inputs',\n      target: 'data/Lifetime Value Prediction Dashboard Input'\n    },\n    {\n      source: 'task/Generate Dashboard Inputs',\n      target: 'data/Digital Sales Dashboard Input'\n    },\n    {\n      source: 'task/Generate Dashboard Inputs',\n      target: 'data/Vendor Sales Dashboard Input'\n    }\n  ],\n  nodes: [\n    {\n      full_name: 'Load Raw Interaction Data',\n      id: 'task/Load Raw Interaction Data',\n      name: 'Load Raw Interaction Data',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'Load Raw Country Data',\n      id: 'task/Load Raw Country Data',\n      name: 'Load Raw Country Data',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'Load Raw Shopper Spend Data',\n      id: 'task/Load Raw Shopper Spend Data',\n      name: 'Load Raw Shopper Spend Data',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'Preprocess Primary Interaction Data',\n      id: 'task/Preprocess Primary Interaction Data',\n      name: 'Preprocess Primary Interaction Data',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'Preprocess Primary Country Data',\n      id: 'task/Preprocess Primary Country Data',\n      name: 'Preprocess Primary Country Data',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'Preprocess Primary Shopper Spend Data',\n      id: 'task/Preprocess Primary Shopper Spend Data',\n      name: 'Preprocess Primary Shopper Spend Data',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'Create Shopper Spend Features',\n      id: 'task/Create Shopper Spend Features',\n      name: 'Create Shopper Spend Features',\n      tags: ['Feature Engineering', 'Data Engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'Create Shopper Churn Features',\n      id: 'task/Create Shopper Churn Features',\n      name: 'Create Shopper Churn Features',\n      tags: ['Feature Engineering', 'Data Engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'Prepare Vendor Input',\n      id: 'task/Prepare Vendor Input',\n      name: 'Prepare Vendor Input',\n      tags: ['Feature Engineering', 'Data Engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'Prepare CRM Input',\n      id: 'task/Prepare CRM Input',\n      name: 'Prepare CRM Input',\n      tags: ['Feature Engineering', 'Data Engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'Predictive Sales Model',\n      id: 'task/Predictive Sales Model',\n      name: 'Predictive Sales Model',\n      tags: ['Model Training', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Predictive Engagement Model',\n      id: 'task/Predictive Engagement Model',\n      name: 'Predictive Engagement Model',\n      tags: ['Model Training', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Sales Model Explainable AI',\n      id: 'task/Sales Model Explainable AI',\n      name: 'Sales Model Explainable AI',\n      tags: ['Model Explaination', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Engagement Model Explainable AI',\n      id: 'task/Engagement Model Explainable AI',\n      name: 'Engagement Model Explainable AI',\n      tags: ['Model Explaination', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Perform Digital Analysis',\n      id: 'task/Perform Digital Analysis',\n      name: 'Perform Digital Analysis',\n      tags: ['Model Training', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Engagement Recommendation Engine',\n      id: 'task/Engagement Recommendation Engine',\n      name: 'Engagement Recommendation Engine',\n      tags: ['Model Training', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Sales Model Performance Monitoring',\n      id: 'task/Sales Model Performance Monitoring',\n      name: 'Sales Model Performance Monitoring',\n      tags: ['Model Performance Monitoring', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Engagement Model Performance Monitoring',\n      id: 'task/Engagement Model Performance Monitoring',\n      name: 'Engagement Model Performance Monitoring',\n      tags: ['Model Performance Monitoring', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Multi-Channel Optimisation',\n      id: 'task/Multi-Channel Optimisation',\n      name: 'Multi-Channel Optimisation',\n      tags: ['Optimisation', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Content Optimisation',\n      id: 'task/Content Optimisation',\n      name: 'Content Optimisation',\n      tags: ['Optimisation', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Segment Journeys',\n      id: 'task/Segment Journeys',\n      name: 'Segment Journeys',\n      tags: ['Optimisation', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Generate Dashboard Inputs',\n      id: 'task/Generate Dashboard Inputs',\n      name: 'Generate Dashboard Inputs',\n      tags: ['Reporting', 'Data Science'],\n      type: 'task'\n    },\n    {\n      full_name: 'Interaction Raw',\n      id: 'data/Interaction Raw',\n      name: 'Interaction Raw',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'Interaction Primary',\n      id: 'data/Interaction Primary',\n      name: 'Interaction Primary',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'Country Raw',\n      id: 'data/Country Raw',\n      name: 'Country Raw',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'Country Primary',\n      id: 'data/Country Primary',\n      name: 'Country Primary',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'Shopper Spend Raw',\n      id: 'data/Shopper Spend Raw',\n      name: 'Shopper Spend Raw',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'Shopper Spend Primary',\n      id: 'data/Shopper Spend Primary',\n      name: 'Shopper Spend Primary',\n      tags: ['Data Engineering', 'Preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'Interaction Intermediate',\n      id: 'data/Interaction Intermediate',\n      name: 'Interaction Intermediate',\n      tags: ['Feature Engineering', 'Data Engineering', 'Preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'Country Intermediate',\n      id: 'data/Country Intermediate',\n      name: 'Country Intermediate',\n      tags: ['Feature Engineering', 'Data Engineering', 'Preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'Shopper Spend Intermediate',\n      id: 'data/Shopper Spend Intermediate',\n      name: 'Shopper Spend Intermediate',\n      tags: ['Feature Engineering', 'Data Engineering', 'Preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'CRM Predictions',\n      id: 'data/CRM Predictions',\n      name: 'CRM Predictions',\n      tags: ['Feature Engineering', 'Data Engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'Shopper Spend Features',\n      id: 'data/Shopper Spend Features',\n      name: 'Shopper Spend Features',\n      tags: [\n        'Model Explaination',\n        'Data Science',\n        'Data Engineering',\n        'Model Training',\n        'Feature Engineering'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'Shopper Churn Features',\n      id: 'data/Shopper Churn Features',\n      name: 'Shopper Churn Features',\n      tags: [\n        'Model Explaination',\n        'Data Science',\n        'Data Engineering',\n        'Model Training',\n        'Feature Engineering'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'Vendor Master',\n      id: 'data/Vendor Master',\n      name: 'Vendor Master',\n      tags: ['Feature Engineering', 'Data Engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'Salesforce CRM',\n      id: 'data/Salesforce CRM',\n      name: 'Salesforce CRM',\n      tags: ['Feature Engineering', 'Data Engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'Vendor Predictions',\n      id: 'data/Vendor Predictions',\n      name: 'Vendor Predictions',\n      tags: [\n        'Model Training',\n        'Feature Engineering',\n        'Data Science',\n        'Data Engineering'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'Salesforce Accounts',\n      id: 'data/Salesforce Accounts',\n      name: 'Salesforce Accounts',\n      tags: ['Feature Engineering', 'Data Engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'params: Sales Model',\n      id: 'data/params: Sales Model',\n      name: 'params: Sales Model',\n      tags: ['Model Training', 'Data Science'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'Sales Validation Results',\n      id: 'data/Sales Validation Results',\n      name: 'Sales Validation Results',\n      tags: ['Model Training', 'Data Science', 'Model Performance Monitoring'],\n      type: 'data'\n    },\n    {\n      full_name: 'Sales Trained Model',\n      id: 'data/Sales Trained Model',\n      name: 'Sales Trained Model',\n      tags: ['Model Training', 'Data Science', 'Model Explaination'],\n      type: 'data'\n    },\n    {\n      full_name: 'params: Engagement Model',\n      id: 'data/params: Engagement Model',\n      name: 'params: Engagement Model',\n      tags: ['Model Training', 'Data Science'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'Engagement Validation Results',\n      id: 'data/Engagement Validation Results',\n      name: 'Engagement Validation Results',\n      tags: ['Model Training', 'Data Science', 'Model Performance Monitoring'],\n      type: 'data'\n    },\n    {\n      full_name: 'Engagement Trained Model',\n      id: 'data/Engagement Trained Model',\n      name: 'Engagement Trained Model',\n      tags: ['Model Training', 'Data Science', 'Model Explaination'],\n      type: 'data'\n    },\n    {\n      full_name: 'Sales Model Explanations',\n      id: 'data/Sales Model Explanations',\n      name: 'Sales Model Explanations',\n      tags: [\n        'Reporting',\n        'Model Performance Monitoring',\n        'Data Science',\n        'Model Explaination'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'Engagement Model Explanations',\n      id: 'data/Engagement Model Explanations',\n      name: 'Engagement Model Explanations',\n      tags: [\n        'Reporting',\n        'Model Performance Monitoring',\n        'Data Science',\n        'Model Explaination'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'params: Optimisation',\n      id: 'data/params: Optimisation',\n      name: 'params: Optimisation',\n      tags: ['Model Training', 'Data Science', 'Optimisation'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'Digital Analysis',\n      id: 'data/Digital Analysis',\n      name: 'Digital Analysis',\n      tags: ['Model Training', 'Data Science', 'Optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'Engagement Recommendations',\n      id: 'data/Engagement Recommendations',\n      name: 'Engagement Recommendations',\n      tags: ['Model Training', 'Data Science'],\n      type: 'data'\n    },\n    {\n      full_name: 'Action Cost Table',\n      id: 'data/Action Cost Table',\n      name: 'Action Cost Table',\n      tags: ['Data Science', 'Optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'Multi-Channel Resolutions',\n      id: 'data/Multi-Channel Resolutions',\n      name: 'Multi-Channel Resolutions',\n      tags: ['Reporting', 'Data Science', 'Optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'Content Resolutions',\n      id: 'data/Content Resolutions',\n      name: 'Content Resolutions',\n      tags: ['Reporting', 'Data Science', 'Optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'Segment Journeys Allocations',\n      id: 'data/Segment Journeys Allocations',\n      name: 'Segment Journeys Allocations',\n      tags: ['Reporting', 'Data Science', 'Optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'Upselling Readiness Dashboard Input',\n      id: 'data/Upselling Readiness Dashboard Input',\n      name: 'Upselling Readiness Dashboard Input',\n      tags: ['Reporting', 'Data Science'],\n      type: 'data'\n    },\n    {\n      full_name: 'Lead Scoring Dashboard Input',\n      id: 'data/Lead Scoring Dashboard Input',\n      name: 'Lead Scoring Dashboard Input',\n      tags: ['Reporting', 'Data Science'],\n      type: 'data'\n    },\n    {\n      full_name: 'Lifetime Value Prediction Dashboard Input',\n      id: 'data/Lifetime Value Prediction Dashboard Input',\n      name: 'Lifetime Value Prediction Dashboard Input',\n      tags: ['Reporting', 'Data Science'],\n      type: 'data'\n    },\n    {\n      full_name: 'Digital Sales Dashboard Input',\n      id: 'data/Digital Sales Dashboard Input',\n      name: 'Digital Sales Dashboard Input',\n      tags: ['Reporting', 'Data Science'],\n      type: 'data'\n    },\n    {\n      full_name: 'Vendor Sales Dashboard Input',\n      id: 'data/Vendor Sales Dashboard Input',\n      name: 'Vendor Sales Dashboard Input',\n      tags: ['Reporting', 'Data Science'],\n      type: 'data'\n    }\n  ],\n  tags: [\n    {\n      id: 'Preprocessing',\n      name: 'Preprocessing'\n    },\n    {\n      id: 'Model Explaination',\n      name: 'Model Explaination'\n    },\n    {\n      id: 'Model Performance Monitoring',\n      name: 'Model Performance Monitoring'\n    },\n    {\n      id: 'Reporting',\n      name: 'Reporting'\n    },\n    {\n      id: 'Data Science',\n      name: 'Data Science'\n    },\n    {\n      id: 'Data Engineering',\n      name: 'Data Engineering'\n    },\n    {\n      id: 'Model Training',\n      name: 'Model Training'\n    },\n    {\n      id: 'Feature Engineering',\n      name: 'Feature Engineering'\n    },\n    {\n      id: 'Optimisation',\n      name: 'Optimisation'\n    }\n  ]\n};\n","import { json } from 'd3-fetch';\nimport config from '../../config';\nimport getRandomPipeline from '../../utils/random-data';\nimport formatData from '../../utils/format-data';\nimport loremIpsum from '../../utils/data/lorem-ipsum.mock';\nimport animals from '../../utils/data/animals.mock';\nimport demo from '../../utils/data/demo.mock';\nimport { loadState } from '../../utils';\n\n/**\n * Configure the redux store's initial state\n * @param {Object}   pipelineData Formatted pipeline data\n * @param {Object}   props App component props\n */\nexport const getInitialState = pipelineData => {\n  // Load properties from localStorage if defined, else use defaults\n  const {\n    parameters = true,\n    textLabels = false,\n    theme = 'dark',\n    view = 'combined'\n  } = loadState();\n\n  return {\n    ...pipelineData,\n    chartSize: {},\n    parameters,\n    textLabels,\n    view,\n    theme\n  };\n};\n\n/**\n * Determine how data should be loaded (i.e. async from JSON, or randomly-generated,\n * or directly via props), then load and format it.\n * @param {string|Array} data Either raw data itself, or a 'json'/'random' string\n * @param {Function} onLoadData Callback for adding data to the store once loaded\n */\nexport const loadData = (data, onLoadData) => {\n  switch (data) {\n    case 'random':\n      return formatData(getRandomPipeline());\n    case 'lorem':\n      return formatData(loremIpsum);\n    case 'animals':\n      return formatData(animals);\n    case 'demo':\n      return formatData(demo);\n    case 'json':\n      loadJsonData().then(onLoadData);\n      return formatData();\n    case null:\n      throw new Error('No data was provided to App component via props');\n    default:\n      return formatData(data);\n  }\n};\n\n/**\n * Asynchronously load, parse and format data from json file using D3\n */\nexport const loadJsonData = () => {\n  const { dataPath } = config();\n  return json(dataPath)\n    .catch(() => {\n      throw new Error(\n        `Unable to load pipeline data. Please check that you have placed a file at ${dataPath}`\n      );\n    })\n    .then(formatData);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport store from '../../store';\nimport { resetData } from '../../actions';\nimport Wrapper from '../wrapper';\nimport formatData from '../../utils/format-data';\nimport { getInitialState, loadData } from './load-data';\nimport '@quantumblack/kedro-ui/lib/styles/app.css';\nimport './app.css';\n\n/**\n * Main wrapper component. Handles store, and loads/formats pipeline data\n */\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const pipelineData = loadData(props.data, this.resetStoreData.bind(this));\n    const initialState = getInitialState(pipelineData, props);\n    this.store = store(initialState);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data.schema_id !== this.props.data.schema_id) {\n      this.resetStoreData(formatData(this.props.data));\n    }\n  }\n\n  /**\n   * Dispatch an action to update the store with new pipeline data\n   * @param {Object} formattedData Normalised state data\n   */\n  resetStoreData(formattedData) {\n    this.store.dispatch(resetData(formattedData));\n  }\n\n  render() {\n    return this.props.data ? (\n      <Provider store={this.store}>\n        <Wrapper />\n      </Provider>\n    ) : null;\n  }\n}\n\nApp.propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      created_ts: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      edges: PropTypes.array.isRequired,\n      message: PropTypes.string,\n      nodes: PropTypes.array.isRequired,\n      tags: PropTypes.array\n    })\n  ])\n};\n\nApp.defaultProps = {\n  /**\n   * String (e.g. 'json') or pipeline data\n   */\n  data: null\n};\n\nexport default App;\n","import { createStore } from 'redux';\nimport reducer from '../reducers';\nimport { saveState } from '../utils';\n\nexport default function configureStore(initialState) {\n  const store = createStore(reducer, initialState);\n\n  store.subscribe(() => {\n    const { parameters, textLabels, theme, view } = store.getState();\n    saveState({ parameters, textLabels, theme, view });\n  });\n\n  return store;\n}\n","import React from 'react';\nimport KonamiCode from 'konami-code';\nimport './easter-egg.css';\nimport mp3 from './brodyquest.mp3';\nimport img from './easter-egg.png';\n\n/**\n * Konami code Easter Egg component\n */\nclass EasterEgg extends React.Component {\n  /**\n   * Create new APP\n   * @param {object} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      play: false\n    };\n    console.info('Konami code is supported');\n\n    this.audio = new Audio(mp3);\n    this.audio.loop = true;\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n  }\n\n  /**\n   * Called when mounted to view\n   */\n  componentDidMount() {\n    const konami = new KonamiCode();\n    konami.listen(this._toggleState.bind(this));\n    window.addEventListener('keydown', this._handleKeyDown);\n  }\n\n  /**\n   * Triggered when component state updates\n   */\n  componentDidUpdate() {\n    this._toggleAudio();\n    this._toggleCSS();\n  }\n\n  /**\n   * Called just before component is removed from the view\n   */\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this._handleKeyDown);\n    document.body.classList.remove('easter');\n  }\n\n  /**\n   * Handle keyboard interaction\n   * @param {Event} e\n   */\n  _handleKeyDown(e) {\n    const escape = e.keyCode === 27;\n    if (escape && this.state.play) {\n      this.setState({\n        play: false\n      });\n    }\n  }\n\n  /**\n   * Toggle play state on/off\n   */\n  _toggleState() {\n    this.setState({ play: !this.state.play });\n  }\n\n  /**\n   * Play/Pause the mp3\n   */\n  _toggleAudio() {\n    if (this.state.play) {\n      this.audio.play();\n    } else {\n      this.audio.pause();\n    }\n  }\n\n  /**\n   * Play/Pause the mp3\n   */\n  _toggleCSS() {\n    if (this.state.play) {\n      document.body.classList.add('easter-theme');\n    } else {\n      document.body.classList.remove('easter-theme');\n    }\n  }\n\n  /**\n   * Render the component\n   * @return {ReactElement}\n   */\n  render() {\n    const { play } = this.state;\n    if (!play) {\n      return null;\n    }\n    return (\n      <div className=\"easter-egg\">\n        <img src={img} alt=\"\" width=\"500\" height=\"480\" />\n      </div>\n    );\n  }\n}\n\nexport default EasterEgg;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'what-input';\nimport App from './components/app';\nimport EasterEgg from './components/easter-egg';\nimport config from './config';\nimport './styles/index.css';\n\nconst { dataSource } = config();\n\nReactDOM.render(\n  <>\n    <App data={dataSource} />\n    <EasterEgg />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}